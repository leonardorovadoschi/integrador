/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janela.cplus;

import entidade.cplus.Fornecedor;
import entidade.cplus.Fornproduto;
import entidade.cplus.Moventradaprod;
import entidade.cplus.Produto;
import integrador.render.ConfTabelaEntradaProd;
import integrador.render.ConfTabelaProduto;
import javax.swing.JOptionPane;
import java.awt.Toolkit;
import javax.swing.table.DefaultTableModel;
import query.cplus.QueryCplus;

/**
 *
 * @author leonardo
 */
public class ListagemEntradaProdutoJDialog extends javax.swing.JDialog {

    /**
     * Creates new form ListagemEntradasJDialog
     *
     * @param parent
     * @param modal
     */
    public ListagemEntradaProdutoJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        colunaCodMovEntrada = jTableListagemEntradaProduto.getColumnModel().getColumnIndex("CodMovEntrada");
        //managerCplus = managerCplus1;
        queryCplus = new QueryCplus();
        format = new FormataCampos();
        jDateChooserDataFinal.setDate(format.alteraDiaData(format.dataAtual(), 0));
        jDateChooserDataInicial.setDate(format.alteraDiaData(format.dataAtual(), -2));
        listagemClientesJDialog = new ListagemClientesJDialog(parent, modal);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icones/logo.png")));
        jTableListagemEntradaProduto.setDefaultRenderer(Object.class, new ConfTabelaEntradaProd());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cplusPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("cplusPU").createEntityManager();
        moventradaQuery = java.beans.Beans.isDesignTime() ? null : cplusPUEntityManager.createQuery("SELECT mov FROM Moventradaprod mov WHERE mov.codprod.codprod = \"999999\"");
        movEntradaProdList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(moventradaQuery.getResultList());
        jPanelPesquisa = new javax.swing.JPanel();
        jComboBoxTipoPesquisa1 = new javax.swing.JComboBox();
        jTextFieldTermoPesquisa = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jLabelDataInicial = new javax.swing.JLabel();
        jDateChooserDataInicial = new com.toedter.calendar.JDateChooser();
        jLabelDataFinal = new javax.swing.JLabel();
        jDateChooserDataFinal = new com.toedter.calendar.JDateChooser();
        jCheckBoxSomenteCompras = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldMaximoDeResultadosEntradas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListagemEntradaProduto = new javax.swing.JTable();
        jButtonOk = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Listagem de Entradas");

        jPanelPesquisa.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa"));

        jComboBoxTipoPesquisa1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jComboBoxTipoPesquisa1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código Produto" }));
        jComboBoxTipoPesquisa1.setToolTipText("Selecione a opção que desejar!");
        jComboBoxTipoPesquisa1.setFocusable(false);

        jTextFieldTermoPesquisa.setEnabled(false);
        jTextFieldTermoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTermoPesquisaActionPerformed(evt);
            }
        });

        jButtonPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jLabelDataInicial.setText("Data Inicial:");

        jLabelDataFinal.setText("Data Final:");

        jCheckBoxSomenteCompras.setSelected(true);
        jCheckBoxSomenteCompras.setText("Somente Compras");

        jLabel1.setText("Maximo de Resultados:");

        jTextFieldMaximoDeResultadosEntradas.setText("5");

        javax.swing.GroupLayout jPanelPesquisaLayout = new javax.swing.GroupLayout(jPanelPesquisa);
        jPanelPesquisa.setLayout(jPanelPesquisaLayout);
        jPanelPesquisaLayout.setHorizontalGroup(
            jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                        .addComponent(jComboBoxTipoPesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldTermoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                        .addComponent(jLabelDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooserDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxSomenteCompras)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldMaximoDeResultadosEntradas, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        jPanelPesquisaLayout.setVerticalGroup(
            jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTipoPesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTermoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDataInicial)
                    .addComponent(jDateChooserDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDataFinal)
                    .addComponent(jDateChooserDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBoxSomenteCompras)
                        .addComponent(jLabel1)
                        .addComponent(jTextFieldMaximoDeResultadosEntradas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTableListagemEntradaProduto.setAutoCreateRowSorter(true);
        jTableListagemEntradaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data Entrada", "Fornecedor", "Codigo Fornecedor", "Quantidade", "Valor Unitário", "Valor Total", "Aliq. IPI", "Valor IPI", "CST", "CFOP", "Aliq. ICMS", "Valor ICMS", "Num Nota", "CodMovEntrada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableListagemEntradaProduto.setToolTipText("Listagem de Entradas");
        jTableListagemEntradaProduto.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableListagemEntradaProduto.setColumnSelectionAllowed(true);
        jTableListagemEntradaProduto.getTableHeader().setReorderingAllowed(false);
        jTableListagemEntradaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListagemEntradaProdutoMouseClicked(evt);
            }
        });
        jTableListagemEntradaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableListagemEntradaProdutoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListagemEntradaProduto);
        jTableListagemEntradaProduto.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTableListagemEntradaProduto.getColumnModel().getColumnCount() > 0) {
            jTableListagemEntradaProduto.getColumnModel().getColumn(0).setPreferredWidth(90);
            jTableListagemEntradaProduto.getColumnModel().getColumn(1).setPreferredWidth(340);
            jTableListagemEntradaProduto.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        jButtonOk.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/ok.png"))); // NOI18N
        jButtonOk.setText("OK!");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonOk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCancelar))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonOk))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTermoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTermoPesquisaActionPerformed
        //tipoPesquisa();
    }//GEN-LAST:event_jTextFieldTermoPesquisaActionPerformed

    private void jTableListagemEntradaProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListagemEntradaProdutoMouseClicked

    }//GEN-LAST:event_jTableListagemEntradaProdutoMouseClicked

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        finalizacao();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
       tipoPesquisa();
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        cancelamento();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTableListagemEntradaProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListagemEntradaProdutoKeyPressed
        finalizacao();
    }//GEN-LAST:event_jTableListagemEntradaProdutoKeyPressed

    private void carregaTabelaMovProduto() {
        DefaultTableModel tab = (DefaultTableModel) jTableListagemEntradaProduto.getModel();
        while (jTableListagemEntradaProduto.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTableListagemEntradaProduto.getModel()).removeRow(0);
        }
        for (Moventradaprod e : movEntradaProdList) {
            String cliFor = "";
            if(e.getCodmoventr().getCodForn() == null){
                cliFor = e.getCodmoventr().getCodcli().getNomecli();
            }else{
                cliFor = e.getCodmoventr().getCodForn().getNomeforn();
            }
            //"Data Entrada", "Fornecedor", "Codigo Fornecedor", "Quantidade", "Valor Unitário", "Valor Total", "Aliq IPI", "Valor IPI", "CST", "CFOP", "Aliq. ICMS", "Valor ICMS", ,"Num Nota", "CodMovEntrada"
            tab.addRow(new Object[]{
                format.dataStringDataCompleta(e.getCodmoventr().getData(), 0), //"Data Entrada"             
                cliFor, //"Fornecedor"             
                fornecedorProduto(e.getCodmoventr().getCodForn(), e.getCodprod()), //"Codigo Fornecedor"
                format.bigDecimalParaString(e.getQuantidade(), 0), //"Quantidade"
                format.bigDecimalParaString(e.getValorunitario(), 2),//"Valor Unitário"
                format.bigDecimalParaString(e.getValortotal(), 2), //"Valor Total"
                format.bigDecimalParaPorcentagem(e.getAliqipi()), //"Aliq IPI"
                format.bigDecimalParaString(e.getValoripi(), 2), // "Valor IPI"
                e.getCodsituacaotributaria(), //"CST"
                e.getCodcfop().getCodcfop(),//"CFOP"
                format.bigDecimalParaPorcentagem(e.getAliqicms()), //"Aliq. ICMS"
                format.bigDecimalParaString(e.getValoricms(), 2), // "Valor ICMS"
                String.valueOf(e.getCodmoventr().getNumnota()), //"Num Nota"
                e.getCodmoveprod(), //"CodMovEntrada"
            });
        }
    }

    private String fornecedorProduto(Fornecedor fornecedor, Produto codProd) {
        String txt = "";
        if(fornecedor != null){
        for (Fornproduto cod : queryCplus.resultForProduto(codProd.getCodprod(), fornecedor.getCodforn())) {
            txt = cod.getCodigoproduto();
        }
        }
        return txt;
    }

    private void cancelamento() {
       // int cancelar = JOptionPane.showConfirmDialog(null, " Deseja realmente cancelar? \n O processo será encerrado!!", "Cancelar", JOptionPane.YES_NO_CANCEL_OPTION);
       // if (cancelar == JOptionPane.YES_OPTION) {
       //     setCancelamento(true);
            dispose();
       // }
    }

    private boolean verificaSeForNumero(String txt) {
        boolean condicao = true;
        if (txt == null || txt.equals("")) {
            return false;
        }
        for (int i = 0; i < txt.length(); i++) {
            char c = txt.charAt(i);
            if (c < '0' || c > '9') {
                return false;
            }
        }
        return condicao;
    }

    private void tipoPesquisa() {
        switch (jComboBoxTipoPesquisa1.getSelectedIndex()) {

            case 0:
                movEntradaProdList.clear();
                if (verificaSeForNumero(jTextFieldMaximoDeResultadosEntradas.getText())) {
                    for (Moventradaprod movProd : queryCplus.resultProdutoEntrada(termoPes, jCheckBoxSomenteCompras.isSelected(), Integer.valueOf(jTextFieldMaximoDeResultadosEntradas.getText()))) {
                        movEntradaProdList.add(movProd);
                    }
                    carregaTabelaMovProduto();
                } else {
                    JOptionPane.showMessageDialog(null, "São aceitos apenas numeros!!! ");
                }
                break;
        }
    }

    private void finalizacao() {
       // colunaCodMovEntrada = jTableListagemEntradaProduto.getColumnModel().getColumnIndex("Codmoventr");
       // if (jTableListagemEntradaProduto.getSelectedRow() == -1) {
        //    JOptionPane.showMessageDialog(null, "Você deve selecionar uma linha na tabela!!! ");
       // } else {
        //    String cod = jTableListagemEntradaProduto.getValueAt(jTableListagemEntradaProduto.getSelectedRow(), colunaCodMovEntrada).toString();
        //    if (cod != null) {
              //  setMovEntrada(new MoventradaJpaController(Manager.getManagerCplus()).findMoventrada(cod));
         //       setCancelamento(false);
                dispose();
         //   } else {
         //       JOptionPane.showMessageDialog(null, "O Código está nullo por favor verifique!!! ");
         //   }
       // }
    }

    public void setTermoPesquisa(Produto prodCplus) {
        //jComboBoxTipoPesquisa1.setSelectedIndex(indexPesquisa);
        this.jTextFieldTermoPesquisa.setText(prodCplus.getNomeprod());       
        this.termoPes = prodCplus.getCodprod();
        tipoPesquisa();
    }

    //public Moventradaprod getMovEntradaProd() {
    //    return movEntradaProd;
    //}

    //public void setMovEntradaProd(Moventradaprod movEntradaProd) {
    //    this.movEntradaProd = movEntradaProd;
    //}

    /**
     * Função que retorna listagem cancelada pelo usuario
     *
     * @return true se estiver cancelado false se não for cancelado
     */
    public boolean isCancelamento() {
        return cancelamento;
    }

    public void setCancelamento(boolean cancelamento) {
        this.cancelamento = cancelamento;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemEntradaProdutoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemEntradaProdutoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemEntradaProdutoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemEntradaProdutoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListagemEntradaProdutoJDialog dialog = new ListagemEntradaProdutoJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private String termoPes;
    private Moventradaprod movEntradaProd;
    private FormataCampos format;
    private int colunaCodMovEntrada;
    private QueryCplus queryCplus;
    //static EntityManagerFactory managerCplus;
    boolean cancelamento;
    ListagemClientesJDialog listagemClientesJDialog;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager cplusPUEntityManager;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JCheckBox jCheckBoxSomenteCompras;
    private javax.swing.JComboBox jComboBoxTipoPesquisa1;
    private com.toedter.calendar.JDateChooser jDateChooserDataFinal;
    private com.toedter.calendar.JDateChooser jDateChooserDataInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDataFinal;
    private javax.swing.JLabel jLabelDataInicial;
    private javax.swing.JPanel jPanelPesquisa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListagemEntradaProduto;
    private javax.swing.JTextField jTextFieldMaximoDeResultadosEntradas;
    private javax.swing.JTextField jTextFieldTermoPesquisa;
    private java.util.List<entidade.cplus.Moventradaprod> movEntradaProdList;
    private javax.persistence.Query moventradaQuery;
    // End of variables declaration//GEN-END:variables
}
