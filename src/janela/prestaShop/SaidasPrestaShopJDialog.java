/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janela.prestaShop;

import entidade.prestaShop.PsOrders;
import integrador.render.RenderCustomerNome;
import integrador.render.RenderDataEHora;
import integrador.render.RenderPreco;
import janela.cplus.FormataCampos;
import static janela.prestaShop.ListPsProductJDialog.managerIntegrador;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.swing.JOptionPane;
import jpa.prestaShop.PsOrdersJpaController;
import query.prestaShop.QueryPrestaShop;

/**
 *
 * @author leonardo
 */
public class SaidasPrestaShopJDialog extends javax.swing.JDialog {

    /**
     * Creates new form ListagemSaidasMagentoJDialog
     *
     * @param parent
     * @param modal
     * @param managerPrestaShop1
     * @param managerIntegrador1
     */
    public SaidasPrestaShopJDialog(java.awt.Frame parent, boolean modal, EntityManagerFactory managerPrestaShop1, EntityManagerFactory managerIntegrador1) {
        super(parent, modal);
        //new RenderDataEHora();
        //new RenderCustomerNome(managerPrestaShop);
        //new RenderPreco()
        managerIntegrador = managerIntegrador1;
        managerPrestaShop = managerPrestaShop1;
        queryPrestaShop = new QueryPrestaShop(managerPrestaShop);
        initComponents();

        //shopUrl = new QueryIntegrador(managerIntegrador).valorConfiguracao("shopURL");
        //key = new QueryIntegrador(managerIntegrador).valorConfiguracao("shopKEY");
        //this.ws = new ClienteWebService(shopUrl, key, false);
        
        idOrder = jTableListOrders.getColumnModel().getColumnIndex("Id Order");
        formataCampos = new FormataCampos();
        jDateChooserDataInicial.setDate(formataCampos.alteraDiaData(formataCampos.dataAtual(), -2));
        jDateChooserDataFinal.setDate(formataCampos.alteraDiaData(formataCampos.dataAtual(), 1));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icones/logo.png")));
        controleDeAcesso();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroupStatusPedido = new javax.swing.ButtonGroup();
        PrestaShopPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("PrestaShopPU").createEntityManager();
        psOrdersQuery = java.beans.Beans.isDesignTime() ? null : PrestaShopPUEntityManager.createQuery("SELECT p FROM PsOrders p").setMaxResults(10);
        psOrdersList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(new java.util.LinkedList(psOrdersQuery.getResultList()));
        jPanelPesquisa = new javax.swing.JPanel();
        jComboBoxTipoPesquisa = new javax.swing.JComboBox();
        jTextFieldTermoPesquisa = new javax.swing.JTextField();
        jLabelDataInicial = new javax.swing.JLabel();
        jLabelDataFinal = new javax.swing.JLabel();
        jButtonPesquisar = new javax.swing.JButton();
        jRadioButtonPendente = new javax.swing.JRadioButton();
        jRadioButtonCancelado = new javax.swing.JRadioButton();
        jRadioButtonProcessado = new javax.swing.JRadioButton();
        jDateChooserDataInicial = new com.toedter.calendar.JDateChooser();
        jDateChooserDataFinal = new com.toedter.calendar.JDateChooser();
        jRadioButtonTodos = new javax.swing.JRadioButton();
        jRadioButtonEmSeparacao = new javax.swing.JRadioButton();
        jButtonOk = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableListOrders = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Pesquisa de Saidas");

        jPanelPesquisa.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa"));

        jComboBoxTipoPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Referência", "Status do Pedido", "ID" }));
        jComboBoxTipoPesquisa.setSelectedIndex(1);
        jComboBoxTipoPesquisa.setToolTipText("selecione qual o tipo de pesquisa que você deseja fazer");
        jComboBoxTipoPesquisa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoPesquisaItemStateChanged(evt);
            }
        });

        jTextFieldTermoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTermoPesquisaActionPerformed(evt);
            }
        });

        jLabelDataInicial.setText("Data Inicial:");

        jLabelDataFinal.setText("Data Final:");

        jButtonPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        buttonGroupStatusPedido.add(jRadioButtonPendente);
        jRadioButtonPendente.setSelected(true);
        jRadioButtonPendente.setText("Pendente");
        jRadioButtonPendente.setEnabled(false);

        buttonGroupStatusPedido.add(jRadioButtonCancelado);
        jRadioButtonCancelado.setText("Cancelado");
        jRadioButtonCancelado.setEnabled(false);

        buttonGroupStatusPedido.add(jRadioButtonProcessado);
        jRadioButtonProcessado.setText("Completo");
        jRadioButtonProcessado.setEnabled(false);

        jDateChooserDataInicial.setToolTipText("Insira a data Inicial do filtro");

        jDateChooserDataFinal.setToolTipText("Insira a data final do filtro");

        buttonGroupStatusPedido.add(jRadioButtonTodos);
        jRadioButtonTodos.setText("Todos");

        buttonGroupStatusPedido.add(jRadioButtonEmSeparacao);
        jRadioButtonEmSeparacao.setText("Em Separação");

        javax.swing.GroupLayout jPanelPesquisaLayout = new javax.swing.GroupLayout(jPanelPesquisa);
        jPanelPesquisa.setLayout(jPanelPesquisaLayout);
        jPanelPesquisaLayout.setHorizontalGroup(
            jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                        .addComponent(jComboBoxTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTermoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                        .addComponent(jLabelDataInicial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelDataFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonPendente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonCancelado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonProcessado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonEmSeparacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonTodos)))
                .addGap(0, 195, Short.MAX_VALUE))
        );
        jPanelPesquisaLayout.setVerticalGroup(
            jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisaLayout.createSequentialGroup()
                .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTermoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelDataInicial)
                        .addComponent(jLabelDataFinal))
                    .addComponent(jDateChooserDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonPendente)
                        .addComponent(jRadioButtonCancelado)
                        .addComponent(jRadioButtonProcessado)
                        .addComponent(jRadioButtonTodos)
                        .addComponent(jRadioButtonEmSeparacao))
                    .addComponent(jDateChooserDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButtonOk.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/ok.png"))); // NOI18N
        jButtonOk.setText("OK!");
        jButtonOk.setEnabled(false);
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jTableListOrders.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, psOrdersList, jTableListOrders);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idOrder}"));
        columnBinding.setColumnName("Id Order");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${reference}"));
        columnBinding.setColumnName("Reference");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCustomer}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${payment}"));
        columnBinding.setColumnName("Payment");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalPaidTaxExcl}"));
        columnBinding.setColumnName("Total Paid Tax Excl");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalDiscountsTaxIncl}"));
        columnBinding.setColumnName("Total Discounts Tax Incl");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalDiscountsTaxExcl}"));
        columnBinding.setColumnName("Total Discounts Tax Excl");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalPaidTaxIncl}"));
        columnBinding.setColumnName("Total Paid Tax Incl");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalShipping}"));
        columnBinding.setColumnName("Total Shipping");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalShippingTaxIncl}"));
        columnBinding.setColumnName("Total Shipping Tax Incl");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalShippingTaxExcl}"));
        columnBinding.setColumnName("Total Shipping Tax Excl");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${invoiceNumber}"));
        columnBinding.setColumnName("Invoice Number");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateAdd}"));
        columnBinding.setColumnName("Date Add");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateUpd}"));
        columnBinding.setColumnName("Date Upd");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCarrier}"));
        columnBinding.setColumnName("Id Carrier");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableListOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableListOrdersMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTableListOrders);
        if (jTableListOrders.getColumnModel().getColumnCount() > 0) {
            jTableListOrders.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTableListOrders.getColumnModel().getColumn(1).setMinWidth(80);
            jTableListOrders.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTableListOrders.getColumnModel().getColumn(1).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(2).setMinWidth(350);
            jTableListOrders.getColumnModel().getColumn(2).setPreferredWidth(400);
            jTableListOrders.getColumnModel().getColumn(2).setMaxWidth(800);
            jTableListOrders.getColumnModel().getColumn(2).setCellRenderer(new RenderCustomerNome(managerPrestaShop));
            jTableListOrders.getColumnModel().getColumn(3).setMinWidth(100);
            jTableListOrders.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTableListOrders.getColumnModel().getColumn(3).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(4).setMinWidth(100);
            jTableListOrders.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTableListOrders.getColumnModel().getColumn(4).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(4).setCellRenderer(new RenderPreco());
            jTableListOrders.getColumnModel().getColumn(5).setMinWidth(100);
            jTableListOrders.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTableListOrders.getColumnModel().getColumn(5).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(5).setCellRenderer(new RenderPreco());
            jTableListOrders.getColumnModel().getColumn(6).setMinWidth(100);
            jTableListOrders.getColumnModel().getColumn(6).setPreferredWidth(150);
            jTableListOrders.getColumnModel().getColumn(6).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(6).setCellRenderer(new RenderPreco());
            jTableListOrders.getColumnModel().getColumn(7).setMinWidth(100);
            jTableListOrders.getColumnModel().getColumn(7).setPreferredWidth(150);
            jTableListOrders.getColumnModel().getColumn(7).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(7).setCellRenderer(new RenderPreco());
            jTableListOrders.getColumnModel().getColumn(8).setMinWidth(100);
            jTableListOrders.getColumnModel().getColumn(8).setPreferredWidth(150);
            jTableListOrders.getColumnModel().getColumn(8).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(8).setCellRenderer(new RenderPreco());
            jTableListOrders.getColumnModel().getColumn(9).setMinWidth(100);
            jTableListOrders.getColumnModel().getColumn(9).setPreferredWidth(150);
            jTableListOrders.getColumnModel().getColumn(9).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(9).setCellRenderer(new RenderPreco());
            jTableListOrders.getColumnModel().getColumn(10).setMinWidth(100);
            jTableListOrders.getColumnModel().getColumn(10).setPreferredWidth(150);
            jTableListOrders.getColumnModel().getColumn(10).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(10).setCellRenderer(new RenderPreco());
            jTableListOrders.getColumnModel().getColumn(11).setMinWidth(50);
            jTableListOrders.getColumnModel().getColumn(11).setPreferredWidth(50);
            jTableListOrders.getColumnModel().getColumn(11).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(12).setMinWidth(150);
            jTableListOrders.getColumnModel().getColumn(12).setPreferredWidth(200);
            jTableListOrders.getColumnModel().getColumn(12).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(12).setCellRenderer(new RenderDataEHora());
            jTableListOrders.getColumnModel().getColumn(13).setMinWidth(150);
            jTableListOrders.getColumnModel().getColumn(13).setPreferredWidth(200);
            jTableListOrders.getColumnModel().getColumn(13).setMaxWidth(300);
            jTableListOrders.getColumnModel().getColumn(13).setCellRenderer(new RenderDataEHora());
            jTableListOrders.getColumnModel().getColumn(14).setMinWidth(30);
            jTableListOrders.getColumnModel().getColumn(14).setPreferredWidth(30);
            jTableListOrders.getColumnModel().getColumn(14).setMaxWidth(100);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonOk)
                .addGap(18, 18, 18)
                .addComponent(jButtonCancelar)
                .addGap(98, 98, 98))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1152, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanelPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk)
                    .addComponent(jButtonCancelar))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        finalizacao();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        cancelamento();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        pesquisas();
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jTextFieldTermoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTermoPesquisaActionPerformed
        pesquisas();
    }//GEN-LAST:event_jTextFieldTermoPesquisaActionPerformed

    private void jComboBoxTipoPesquisaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoPesquisaItemStateChanged
        controleDeAcesso();
    }//GEN-LAST:event_jComboBoxTipoPesquisaItemStateChanged

    private void jTableListOrdersMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListOrdersMousePressed
        jButtonOk.setEnabled(true);
    }//GEN-LAST:event_jTableListOrdersMousePressed

    private void controleDeAcesso() {
        switch (jComboBoxTipoPesquisa.getSelectedIndex()) {
            case 0:
                jRadioButtonCancelado.setEnabled(false);
                jRadioButtonProcessado.setEnabled(false);
                jRadioButtonPendente.setEnabled(false);
                jTextFieldTermoPesquisa.setEnabled(true);
                jDateChooserDataFinal.setEnabled(false);
                jDateChooserDataInicial.setEnabled(false);
                break;
            case 1:
                jRadioButtonCancelado.setEnabled(true);
                jRadioButtonProcessado.setEnabled(true);
                jRadioButtonPendente.setEnabled(true);
                jTextFieldTermoPesquisa.setEnabled(false);
                jDateChooserDataFinal.setEnabled(true);
                jDateChooserDataInicial.setEnabled(true);
                break;
            case 2:
                jRadioButtonCancelado.setEnabled(false);
                jRadioButtonProcessado.setEnabled(false);
                jRadioButtonPendente.setEnabled(false);
                jTextFieldTermoPesquisa.setEnabled(true);
                jDateChooserDataFinal.setEnabled(false);
                jDateChooserDataInicial.setEnabled(false);
                break;
        }

    }

    private void cancelamento() {
        int cancelar = JOptionPane.showConfirmDialog(null, " Deseja realmente cancelar? \n O processo será encerrado!!", "Cancelar", JOptionPane.YES_NO_CANCEL_OPTION);
        if (cancelar == JOptionPane.YES_OPTION) {
            setCancelamento(true);
            dispose();
        }
    }

    public void pesquisas() {
        List<PsOrders> listPsOrders;
        switch (jComboBoxTipoPesquisa.getSelectedIndex()) {
            case 0://por numero do pedido 
                psOrdersList.clear();
                if (!"".equals(jTextFieldTermoPesquisa.getText())) {
                    ///  listPsOrders = queryPrestaShop.listPsOrders(jTextFieldTermoPesquisa.getText());
                    //listPsOrders = new ArrayList<>();
                   /**
                    try {
                        HashMap<String, Object> getSchemaOpt = new HashMap();
                        getSchemaOpt.put("url", shopUrl + "/api/orders?filter[reference]=" + jTextFieldTermoPesquisa.getText().trim());
                        Document document;
                        document = ws.getFuncao(getSchemaOpt);
                        NodeList nList = document.getElementsByTagName("order");
                        for (String id : ws.retornaListaId(nList)) {
                            getSchemaOpt.put("url", shopUrl + "/api/orders/" + id);
                            document = ws.getFuncao(getSchemaOpt);
                            listPsOrders.add(new WebOrders().xmlParaEntidade(document, ws));
                        }
                    } catch (PrestaShopWebserviceException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao consultar Web Service: \n" + ex);
                    }
                    */
                    listPsOrders = queryPrestaShop.listPsOrders(jTextFieldTermoPesquisa.getText().trim());
                    
                    if (listPsOrders.size() < 1) {
                        JOptionPane.showMessageDialog(null, "Não foi encontrado resultado para essa pesquisa!!! ");
                    } else {//fim if que verifica se existe resultado                       
                        for (PsOrders sales : listPsOrders) {
                            //SalesFlatOrder sa = new PsOrdersJpaController(managerPrestaShop).find(sales.getEntityId());
                            psOrdersList.add(sales);
                        }//fim for
                    }//fim else que verificou lista existente  
                }
                break;
            case 1://por status pedido
                psOrdersList.clear();
                listPsOrders = new ArrayList<>();
                Date dataInicial = jDateChooserDataInicial.getDate();
                Date dataFinal = jDateChooserDataFinal.getDate();
                if (jRadioButtonPendente.isSelected()) {
                    /**
                    try {                       
                        HashMap<String, Object> getSchemaOpt = new HashMap();
                        getSchemaOpt.put("url", shopUrl + "/api/orders?date=1&filter[date_upd]=[" + formataCampos.dataStringWebService(dataInicial, 0) + ","
                                + formataCampos.dataStringWebService(dataFinal, 0) + "]&filter[current_state]=[1|2|10]");
                        Document document;
                        document = ws.getFuncao(getSchemaOpt);
                        NodeList nList = document.getElementsByTagName("order");
                        for (String id : ws.retornaListaId(nList)) {
                            getSchemaOpt.put("url", shopUrl + "/api/orders/" + id);
                            document = ws.getFuncao(getSchemaOpt);
                            PsOrders ord = new WebOrders().xmlParaEntidade(document, ws);
                            if (ord != null) {
                                listPsOrders.add(ord);
                            }
                        }
                    } catch (PrestaShopWebserviceException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao consultar Web Service: \n" + ex);
                    }
                    */
                   List<Integer> list = new ArrayList<>();
                       list.add(1);
                       list.add(2);
                    //  list.add(3);
                        list.add(10);
                      listPsOrders = queryPrestaShop.listPsOrders(list, dataInicial, dataFinal);
                    
                } else if (jRadioButtonCancelado.isSelected()) {
                     listPsOrders = queryPrestaShop.listPsOrders(6, dataFinal, dataInicial);
                   /**
                     try {
                        HashMap<String, Object> getSchemaOpt = new HashMap();
                        getSchemaOpt.put("url", shopUrl + "/api/orders?date=1&filter[date_upd]=[" + formataCampos.dataStringWebService(dataInicial, 0) + ","
                                + formataCampos.dataStringWebService(dataFinal, 0) + "]&filter[current_state]=6");
                        Document document;
                        document = ws.getFuncao(getSchemaOpt);
                        NodeList nList = document.getElementsByTagName("order");
                        for (String id : ws.retornaListaId(nList)) {
                            getSchemaOpt.put("url", shopUrl + "/api/orders/" + id);
                            document = ws.getFuncao(getSchemaOpt);
                            listPsOrders.add(new WebOrders().xmlParaEntidade(document, ws));
                        }
                    } catch (PrestaShopWebserviceException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao consultar Web Service: \n" + ex);
                    }
                    */
                } else if (jRadioButtonProcessado.isSelected()) {
                    listPsOrders = queryPrestaShop.listPsOrders(5, dataFinal, dataInicial);
                    /**
                    try {
                        HashMap<String, Object> getSchemaOpt = new HashMap();
                        getSchemaOpt.put("url", shopUrl + "/api/orders?date=1&filter[date_upd]=[" + formataCampos.dataStringWebService(dataInicial, 0) + ","
                                + formataCampos.dataStringWebService(dataFinal, 0) + "]&filter[current_state]=5");
                        Document document;
                        document = ws.getFuncao(getSchemaOpt);
                        NodeList nList = document.getElementsByTagName("order");
                        for (String id : ws.retornaListaId(nList)) {
                            getSchemaOpt.put("url", shopUrl + "/api/orders/" + id);
                            document = ws.getFuncao(getSchemaOpt);
                            listPsOrders.add(new WebOrders().xmlParaEntidade(document, ws));
                        }
                    } catch (PrestaShopWebserviceException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao consultar Web Service: \n" + ex);
                    }
                    */
                } else if (jRadioButtonEmSeparacao.isSelected()) {
                    listPsOrders = queryPrestaShop.listPsOrders(3, dataFinal, dataInicial);
                   /**
                    try {
                        HashMap<String, Object> getSchemaOpt = new HashMap();
                        getSchemaOpt.put("url", shopUrl + "/api/orders?date=1&filter[date_upd]=[" + formataCampos.dataStringWebService(dataInicial, 0) + ","
                                + formataCampos.dataStringWebService(dataFinal, 0) + "]&filter[current_state]=3");
                        Document document;
                        document = ws.getFuncao(getSchemaOpt);
                        NodeList nList = document.getElementsByTagName("order");
                        for (String id : ws.retornaListaId(nList)) {
                            getSchemaOpt.put("url", shopUrl + "/api/orders/" + id);
                            document = ws.getFuncao(getSchemaOpt);
                            listPsOrders.add(new WebOrders().xmlParaEntidade(document, ws));
                        }
                    } catch (PrestaShopWebserviceException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao consultar Web Service: \n" + ex);
                    }
                    */
                } else {
                    listPsOrders = queryPrestaShop.listPsOrdersUpd(dataFinal, dataInicial);
                    /**
                    try {
                        HashMap<String, Object> getSchemaOpt = new HashMap();
                        getSchemaOpt.put("url", shopUrl + "/api/orders?date=1&filter[date_upd]=[" + formataCampos.dataStringWebService(dataInicial, 0) + ","
                                + formataCampos.dataStringWebService(dataFinal, 0) + "]");
                        Document document;
                        document = ws.getFuncao(getSchemaOpt);
                        NodeList nList = document.getElementsByTagName("order");
                        for (String id : ws.retornaListaId(nList)) {
                            getSchemaOpt.put("url", shopUrl + "/api/orders/" + id);
                            document = ws.getFuncao(getSchemaOpt);
                            listPsOrders.add(new WebOrders().xmlParaEntidade(document, ws));
                        }
                    } catch (PrestaShopWebserviceException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao consultar Web Service: \n" + ex);
                    }
                    */
                }
                //Date dataInicial = formataCampos.dataBanco(jTextFieldDataInicial.getText());
                //Date dataFinal = formataCampos.dataBanco(jTextFieldDataFinal.getText());

                if (listPsOrders.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Não foi encontrado resultado para essa pesquisa!!! ");
                } else {
                    for (PsOrders sales : listPsOrders) {
                        psOrdersList.add(sales);
                    }//fim for
                }
                break;
            case 2://sem argumento
                psOrdersList.clear();
                listPsOrders = new ArrayList<>();
                if (!"".equals(jTextFieldTermoPesquisa.getText())) {
                    
                    /**
                    try {
                        HashMap<String, Object> getSchemaOpt = new HashMap();
                        getSchemaOpt.put("url", shopUrl + "/api/orders?filter[id]=" + jTextFieldTermoPesquisa.getText().trim());
                        Document document;
                        document = ws.getFuncao(getSchemaOpt);
                        NodeList nList = document.getElementsByTagName("order");
                        for (String id : ws.retornaListaId(nList)) {
                            getSchemaOpt.put("url", shopUrl + "/api/orders/" + id);
                            document = ws.getFuncao(getSchemaOpt);
                            listPsOrders.add(new WebOrders().xmlParaEntidade(document, ws));
                        }
                    } catch (PrestaShopWebserviceException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao consultar Web Service: \n" + ex);
                    }
                    */
                   listPsOrders = queryPrestaShop.listPsOrders(Integer.valueOf(jTextFieldTermoPesquisa.getText().trim()));
                }
                if (listPsOrders.size() < 1) {
                    JOptionPane.showMessageDialog(null, "Não foi encontrado resultado para essa pesquisa!!! ");
                } else {
                    for (PsOrders sales : listPsOrders) {
                        psOrdersList.add(sales);
                    }//fim for
                }
                break;
            case 3://sem argumento

                break;
            case 4:

                break;
        }
        jButtonOk.setEnabled(false);
    }

    private void finalizacao() {
        idOrder = jTableListOrders.getColumnModel().getColumnIndex("Id Order");
        Integer cod = Integer.valueOf(jTableListOrders.getValueAt(jTableListOrders.getSelectedRow(), idOrder).toString());
        if (cod != null) {
            /**
            try {
                HashMap<String, Object> getSchemaOpt = new HashMap();
                getSchemaOpt.put("url", shopUrl + "/api/orders/" + cod);
                Document document;
                document = ws.getFuncao(getSchemaOpt);
                psOrders = new WebOrders().xmlParaEntidade(document, ws);
                // psOrders = new PsOrdersJpaController(managerPrestaShop).findPsOrders(cod);
            } catch (PrestaShopWebserviceException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao consultar Web Service: \n" + ex);
                setCancelamento(true);
            }
            */
            psOrders = new PsOrdersJpaController(managerPrestaShop).findPsOrders(cod);
            setCancelamento(false);
            dispose();
        } else {
            setCancelamento(true);
            JOptionPane.showMessageDialog(null, "O Código está nullo por favor verifique!!! ");
        }
    }

    public boolean isCancelamento() {
        return cancelamento;
    }

    public void setCancelamento(boolean cancelamento) {
        this.cancelamento = cancelamento;
    }

    public PsOrders getSalesFlatOrder() {
        return psOrders;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaidasPrestaShopJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaidasPrestaShopJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaidasPrestaShopJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaidasPrestaShopJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SaidasPrestaShopJDialog dialog = new SaidasPrestaShopJDialog(new javax.swing.JFrame(), true,managerPrestaShop, managerIntegrador);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

      private final QueryPrestaShop queryPrestaShop;
    static EntityManagerFactory managerPrestaShop;
    private boolean cancelamento;
    private PsOrders psOrders;
    private int idOrder;
    private final FormataCampos formataCampos;
   // private final String shopUrl;
   // private final String key;
   // private ClienteWebService ws;
    // private final String shopUrl = "https://digimacro.com.br";
    //private final String key = "MDUV4W4F7W91BGMVTW5PQYF59N8IVLSC";


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager PrestaShopPUEntityManager;
    private javax.swing.ButtonGroup buttonGroupStatusPedido;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JComboBox jComboBoxTipoPesquisa;
    private com.toedter.calendar.JDateChooser jDateChooserDataFinal;
    private com.toedter.calendar.JDateChooser jDateChooserDataInicial;
    private javax.swing.JLabel jLabelDataFinal;
    private javax.swing.JLabel jLabelDataInicial;
    private javax.swing.JPanel jPanelPesquisa;
    private javax.swing.JRadioButton jRadioButtonCancelado;
    private javax.swing.JRadioButton jRadioButtonEmSeparacao;
    private javax.swing.JRadioButton jRadioButtonPendente;
    private javax.swing.JRadioButton jRadioButtonProcessado;
    private javax.swing.JRadioButton jRadioButtonTodos;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableListOrders;
    private javax.swing.JTextField jTextFieldTermoPesquisa;
    private java.util.List<entidade.prestaShop.PsOrders> psOrdersList;
    private javax.persistence.Query psOrdersQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
