/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package integrador.rma;

import entidade.cplus.Movendaproddevolucaocompra;
import janela.cplus.FormataCampos;
import janela.cplus.ListagemFornecedorJDialog;
import janela.cplus.ListagemSaidasJDialog;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.swing.JOptionPane;
import jpa.cplus.MovendaproddevolucaocompraJpaController;
import query.cplus.QueryCplus;
import query.integrador.QueryIntegrador;


/**
 *
 * @author leonardo
 */
public class ControleRmaJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ControleRmaJFrame
     * @param managerCplus1
     * @param managerIntegrador1
     */
    public ControleRmaJFrame(EntityManagerFactory managerCplus1, EntityManagerFactory managerIntegrador1) {
        initComponents();
        managerCplus = managerCplus1;
        managerIntegrador = managerIntegrador1;
        listagemSaidasJDialog = new ListagemSaidasJDialog(this, true, managerCplus);
        listagemFornecedorJDialog = new ListagemFornecedorJDialog(this, true, managerCplus);
        querySerial = new QueryCplus(managerCplus);
        queryIntegrador = new QueryIntegrador(managerIntegrador);
        colunaCodDevolucao = jTableControleRma.getColumnModel().getColumnIndex("Codmovendaproddevolucaocompra");
        formatacaoDeCampos = new FormataCampos();
        //VariavelStatica var = new VariavelStatica();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icones/logo.png")));
        decimaisArredondamento = Integer.parseInt(queryIntegrador.valorConfiguracao("casas_decimais_ARREDONDAMENTO"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupFiltros = new javax.swing.ButtonGroup();
        buttonGroupTipoSolucao = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableControleRma = new javax.swing.JTable();
        jTabbedPaneControleRma = new javax.swing.JTabbedPane();
        jPanelPesquisas = new javax.swing.JPanel();
        jComboBoxTipoPesquisa = new javax.swing.JComboBox();
        jTextFieldTermoPesquisa = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jRadioButtonResolvido = new javax.swing.JRadioButton();
        jRadioButtonNaoResolvido = new javax.swing.JRadioButton();
        jRadioButtonTodos = new javax.swing.JRadioButton();
        jLabelValorTotalLista = new javax.swing.JLabel();
        jLabelTotalItensLista = new javax.swing.JLabel();
        jTextFieldTotalItensLista = new javax.swing.JTextField();
        jTextFieldValorTotalLista = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jRadioButtonSolucionarItemParcial = new javax.swing.JRadioButton();
        jRadioButtonSolucinarValorParcial = new javax.swing.JRadioButton();
        jRadioButtonSolucionarLista = new javax.swing.JRadioButton();
        jTextFieldQuantidadeSolucionada = new javax.swing.JTextField();
        jLabelQuantidadeSolucionada = new javax.swing.JLabel();
        jLabelValorSolucionado = new javax.swing.JLabel();
        jTextFieldValorSolucionado = new javax.swing.JTextField();
        jButtonSolucionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle RMA");

        jTableControleRma.setAutoCreateRowSorter(true);
        jTableControleRma.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableControleRma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableControleRmaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableControleRma);
        if (jTableControleRma.getColumnModel().getColumnCount() > 0) {
            jTableControleRma.getColumnModel().getColumn(1).setMinWidth(100);
            jTableControleRma.getColumnModel().getColumn(1).setPreferredWidth(350);
            jTableControleRma.getColumnModel().getColumn(1).setMaxWidth(500);
            jTableControleRma.getColumnModel().getColumn(8).setCellRenderer(new integrador.render.RenderPreco());
            jTableControleRma.getColumnModel().getColumn(9).setCellRenderer(new integrador.render.RenderPreco());
        }

        jPanelPesquisas.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisas"));

        jComboBoxTipoPesquisa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jComboBoxTipoPesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Num. Nota", "Num. Pedido", "Nome Fornecedor", "Todos em Aberto" }));

        jTextFieldTermoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTermoPesquisaActionPerformed(evt);
            }
        });

        jButtonPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        jButtonPesquisar.setText("Pesquisar");

        buttonGroupFiltros.add(jRadioButtonResolvido);
        jRadioButtonResolvido.setText("Resolvido");

        buttonGroupFiltros.add(jRadioButtonNaoResolvido);
        jRadioButtonNaoResolvido.setSelected(true);
        jRadioButtonNaoResolvido.setText("Não Resolvido");

        buttonGroupFiltros.add(jRadioButtonTodos);
        jRadioButtonTodos.setText("Todos");

        jLabelValorTotalLista.setText("Valor Total da Lista:");

        jLabelTotalItensLista.setText("Total de Itens da Lista:");

        javax.swing.GroupLayout jPanelPesquisasLayout = new javax.swing.GroupLayout(jPanelPesquisas);
        jPanelPesquisas.setLayout(jPanelPesquisasLayout);
        jPanelPesquisasLayout.setHorizontalGroup(
            jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPesquisasLayout.createSequentialGroup()
                .addGroup(jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPesquisasLayout.createSequentialGroup()
                        .addComponent(jRadioButtonResolvido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonNaoResolvido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonTodos))
                    .addGroup(jPanelPesquisasLayout.createSequentialGroup()
                        .addComponent(jComboBoxTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldTermoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonPesquisar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelValorTotalLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTotalItensLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldValorTotalLista, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(jTextFieldTotalItensLista))
                .addGap(158, 158, 158))
        );
        jPanelPesquisasLayout.setVerticalGroup(
            jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisasLayout.createSequentialGroup()
                .addGroup(jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPesquisasLayout.createSequentialGroup()
                        .addGroup(jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldTermoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPesquisar))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPesquisasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTotalItensLista)
                            .addComponent(jTextFieldTotalItensLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanelPesquisasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonResolvido)
                    .addComponent(jRadioButtonNaoResolvido)
                    .addComponent(jRadioButtonTodos)
                    .addComponent(jLabelValorTotalLista)
                    .addComponent(jTextFieldValorTotalLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPaneControleRma.addTab("Pesquisas", jPanelPesquisas);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Resolver"));

        buttonGroupTipoSolucao.add(jRadioButtonSolucionarItemParcial);
        jRadioButtonSolucionarItemParcial.setSelected(true);
        jRadioButtonSolucionarItemParcial.setText("Solucionar Item Parcial");

        buttonGroupTipoSolucao.add(jRadioButtonSolucinarValorParcial);
        jRadioButtonSolucinarValorParcial.setText("Solucionar Valor Parcial");

        buttonGroupTipoSolucao.add(jRadioButtonSolucionarLista);
        jRadioButtonSolucionarLista.setText("Solucionar Lista");
        jRadioButtonSolucionarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSolucionarListaActionPerformed(evt);
            }
        });

        jLabelQuantidadeSolucionada.setText("Quantidade Solucionada:");

        jLabelValorSolucionado.setText("Valor Solucionado:");

        jButtonSolucionar.setText("Solucionar");
        jButtonSolucionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSolucionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButtonSolucionarItemParcial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonSolucionarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jRadioButtonSolucinarValorParcial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelQuantidadeSolucionada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelValorSolucionado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldQuantidadeSolucionada)
                    .addComponent(jTextFieldValorSolucionado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 355, Short.MAX_VALUE)
                .addComponent(jButtonSolucionar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSolucionarItemParcial)
                    .addComponent(jRadioButtonSolucionarLista)
                    .addComponent(jTextFieldQuantidadeSolucionada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelQuantidadeSolucionada)
                    .addComponent(jButtonSolucionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSolucinarValorParcial)
                    .addComponent(jLabelValorSolucionado)
                    .addComponent(jTextFieldValorSolucionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPaneControleRma.addTab("Solucionar RMA", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jTabbedPaneControleRma)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPaneControleRma, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTermoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTermoPesquisaActionPerformed
        decisaoPesquisa();
    }//GEN-LAST:event_jTextFieldTermoPesquisaActionPerformed

    private void jButtonSolucionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSolucionarActionPerformed
        solucionar();
         jTextFieldValorSolucionado.setEnabled(false);
         jTextFieldQuantidadeSolucionada.setEnabled(false);
    }//GEN-LAST:event_jButtonSolucionarActionPerformed

    private void jRadioButtonSolucionarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSolucionarListaActionPerformed
        jTextFieldValorSolucionado.setEnabled(true);
    }//GEN-LAST:event_jRadioButtonSolucionarListaActionPerformed

    private void jTableControleRmaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableControleRmaMouseClicked
        jTextFieldQuantidadeSolucionada.setText("");
        jTextFieldValorSolucionado.setText("");
        if(jRadioButtonSolucinarValorParcial.isSelected()){
            jTextFieldValorSolucionado.setEnabled(true);
            jTextFieldQuantidadeSolucionada.setEnabled(false);
        }else if(jRadioButtonSolucionarItemParcial.isSelected()){
            jTextFieldQuantidadeSolucionada.setEnabled(true);
            jTextFieldValorSolucionado.setEnabled(false);
        }
    }//GEN-LAST:event_jTableControleRmaMouseClicked

    private void decisaoPesquisa(){
        switch (jComboBoxTipoPesquisa.getSelectedIndex()) {
            case 0:
                this.listagemSaidasJDialog.setTermoPesquisa(jTextFieldTermoPesquisa.getText());
                this.listagemSaidasJDialog.setIndexComboBox(1);
                this.listagemSaidasJDialog.setVisible(true);
                 if(this.listagemSaidasJDialog.isCancelamento() == false){
                listagemPorSaidas();
                 }
                break;
            case 1:
                this.listagemSaidasJDialog.setTermoPesquisa(jTextFieldTermoPesquisa.getText());
                this.listagemSaidasJDialog.setIndexComboBox(0);
                this.listagemSaidasJDialog.setVisible(true);
                if(this.listagemSaidasJDialog.isCancelamento() == false){
                listagemPorSaidas();
                }
                break;
            case 2:
                this.listagemFornecedorJDialog.setTermoPesquisa(jTextFieldTermoPesquisa.getText());
                this.listagemFornecedorJDialog.setTermoPesquisa(jTextFieldTermoPesquisa.getText());
                this.listagemFornecedorJDialog.listarFornecedorPorNome();
                this.listagemFornecedorJDialog.setVisible(true);
                if(this.listagemFornecedorJDialog.isCancelamento()== false){
                    listagemPorFornecedor();
                }
                break;
        }
    }
    
    private void listagemPorSaidas(){
        String filtro;
        if(jRadioButtonResolvido.isSelected()){
            filtro = "Y";
        }else if(jRadioButtonNaoResolvido.isSelected()){
            filtro = "N";
        }else{
            filtro = "T";
        }
        listRma = querySerial.listagemControlaDevolucaoPorSaida(this.listagemSaidasJDialog.getMoVenda().getCodmovenda(), filtro);
        //movendaproddevolucaocompraList.clear();
        jTextFieldValorTotalLista.setText("");
        jTextFieldTotalItensLista.setText("");
        BigDecimal valor = new BigDecimal(BigInteger.ZERO);
        BigDecimal quantidade = new BigDecimal(BigInteger.ZERO);
        for(Movendaproddevolucaocompra dev : listRma){
            valor.add(dev.getValorcusto());
            quantidade.add(dev.getQuantidade());
           // movendaproddevolucaocompraList.add(dev);
        }
        totalListagem(valor, quantidade); 
    }
    
    private void listagemPorFornecedor(){
         String filtro;
        if(jRadioButtonResolvido.isSelected()){
            filtro = "Y";
        }else if(jRadioButtonNaoResolvido.isSelected()){
            filtro = "N";
        }else{
            filtro = "T";
        }
         listRma = querySerial.listagemControlaDevolucaoPorFornecedor(this.listagemFornecedorJDialog.getFornecedor().getCodforn(), filtro);
        //movendaproddevolucaocompraList.clear();
         jTextFieldValorTotalLista.setText("");
        jTextFieldTotalItensLista.setText("");
        BigDecimal valor = new BigDecimal(BigInteger.ZERO);
        BigDecimal quantidade = new BigDecimal(BigInteger.ZERO);
        for(Movendaproddevolucaocompra dev : listRma){
            valor.add(dev.getValorcusto());
            quantidade.add(dev.getQuantidade());
          //  movendaproddevolucaocompraList.add(dev);
        }
        totalListagem(valor, quantidade);
    }
    
    private void totalListagem(BigDecimal valor, BigDecimal quantidade){
        jTextFieldValorTotalLista.setText(formatacaoDeCampos.bigDecimalParaString(valor, 2));
        jTextFieldTotalItensLista.setText(formatacaoDeCampos.bigDecimalParaString(quantidade, 0));
    }
    
    private void solucionar(){
        List<Movendaproddevolucaocompra> lisSolucao;
        if(jRadioButtonSolucinarValorParcial.isSelected()){
            if(jTableControleRma.getSelectedRow() == -1){
               JOptionPane.showMessageDialog(null, "Você deve selecionar uma linha na Tabela!!! ");
            }else{
                if("".equals(jTextFieldValorSolucionado.getText()) || "0".equals(jTextFieldValorSolucionado.getText())){
                    JOptionPane.showMessageDialog(null, "Você deve Informar o valor");
                }else{
                colunaCodDevolucao = jTableControleRma.getColumnModel().getColumnIndex("Codmovendaproddevolucaocompra");
                 lisSolucao = querySerial.listagemporcodigoMovProdDevolucao(jTableControleRma.getValueAt(jTableControleRma.getSelectedRow(), colunaCodDevolucao).toString());
                for(Movendaproddevolucaocompra dev : lisSolucao){
                    BigDecimal valorTexto = formatacaoDeCampos.stringParaDecimal(jTextFieldValorSolucionado.getText(), decimaisArredondamento);
                    if(valorTexto.doubleValue() > dev.getValorcusto().doubleValue() || valorTexto.doubleValue() == 0.00){
                        JOptionPane.showMessageDialog(null, "O valor não pode ser maior que o valor pendente ou igual a 0.00!!! ");
                    }else{
                   dev.setValorretornado(valorTexto);
                        try {
                            new MovendaproddevolucaocompraJpaController(managerCplus).edit(dev);
                        } catch (Exception ex) {
                           JOptionPane.showMessageDialog(null, "houve um erro ao editar o valor retornado!!! \n"+ex);
                        }//fim catch
                    }//fim else que verifica valor maior ou igual
                }//fim for
            }//fim else testo sem valor
            }//fim else que verifica linha digitada
        }else if(jRadioButtonSolucionarItemParcial.isSelected()){
            if(jTableControleRma.getSelectedRow() == -1){
               JOptionPane.showMessageDialog(null, "Você deve selecionar uma linha na Tabela!!! ");
            }else{
                if("".equals(jTextFieldQuantidadeSolucionada.getText()) || "0".equals(jTextFieldQuantidadeSolucionada.getText())){
                    JOptionPane.showMessageDialog(null, "Você deve Informar o valor");
                }else{
                colunaCodDevolucao = jTableControleRma.getColumnModel().getColumnIndex("Codmovendaproddevolucaocompra");
                lisSolucao = querySerial.listagemporcodigoMovProdDevolucao(jTableControleRma.getValueAt(jTableControleRma.getSelectedRow(), colunaCodDevolucao).toString());
                for(Movendaproddevolucaocompra dev : lisSolucao){
                    BigDecimal quantItens = formatacaoDeCampos.stringParaDecimal(jTextFieldQuantidadeSolucionada.getText(), decimaisArredondamento);
                    if(quantItens.doubleValue() > dev.getQuantidade().doubleValue()){
                         JOptionPane.showMessageDialog(null, "A quantidade retornada não pode ser maior que a quantidade enviada!!! ");
                    }else{//fim if que verifica a quantidade digitada
                        dev.setQuantidaderetornada(quantItens);
                        BigDecimal valorRet = dev.getValorcusto().divide(dev.getQuantidade(), 3 ,BigDecimal.ROUND_HALF_UP);
                        valorRet.multiply(quantItens);
                        dev.setValorretornado(valorRet.setScale(decimaisArredondamento, BigDecimal.ROUND_HALF_UP));
                         try {
                            new MovendaproddevolucaocompraJpaController(managerCplus).edit(dev);
                        } catch (Exception ex) {
                           JOptionPane.showMessageDialog(null, "houve um erro ao editar o valor ou quantidade retornado!!! \n"+ex);
                        }//fim catch
                    }//fim else que verifica quantidade digitada                   
                }//fim for
            }//fim else que verifica valor no textfiels
            }//fim else que verifica linha selecionada
        }else{
            int cancelar = JOptionPane.showConfirmDialog(null, " Deseja realmente quitar? \n Essa Pendencia!!", "Cancelar", JOptionPane.YES_NO_CANCEL_OPTION);
            if (cancelar == JOptionPane.YES_OPTION) {
                if("".equals(jTextFieldValorSolucionado.getText()) || "0".equals(jTextFieldValorSolucionado.getText())){
                    JOptionPane.showMessageDialog(null, "Vocï¿½ deve Informar o valor");
                }else{
            double valorTotal = formatacaoDeCampos.stringParaDecimal(jTextFieldValorSolucionado.getText(), decimaisArredondamento).doubleValue();
            double valorCusto;
            for(Movendaproddevolucaocompra dev : listRma){
                valorCusto = dev.getValorcusto().doubleValue();
                if(valorTotal >= valorCusto){
                    dev.setValorretornado(dev.getValorcusto());
                    try {
                        new MovendaproddevolucaocompraJpaController(managerCplus).edit(dev);
                        valorTotal = valorTotal - valorCusto;
                    } catch (Exception ex) {
                       JOptionPane.showMessageDialog(null, "Houve um erro ao editar o valor retornado!!! \n"+ex);
                    }
                }else if(valorTotal > 0.00){
                    dev.setValorretornado(new BigDecimal(valorTotal));
                    try {
                        new MovendaproddevolucaocompraJpaController(managerCplus).edit(dev);
                        valorTotal = 0.00;
                    } catch (Exception ex) {
                       JOptionPane.showMessageDialog(null, "Houve um erro ao editar o valor retornado!!! \n"+ex);
                    }//fim catch
                }//fim if que o valor restante ï¿½ maior que o valor que falta
            }//fim for
            }// fim if confirmaï¿½ï¿½o
        }//fim else texto nulo
        }//fim else que verifica jradio 
        jTextFieldQuantidadeSolucionada.setText("");
        jTextFieldValorSolucionado.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControleRmaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControleRmaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControleRmaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControleRmaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControleRmaJFrame(managerCplus, managerIntegrador).setVisible(true);
            }
        });
    }

    ListagemSaidasJDialog listagemSaidasJDialog;
    ListagemFornecedorJDialog listagemFornecedorJDialog;
    private static EntityManagerFactory managerCplus;
    private static EntityManagerFactory managerIntegrador;
    private QueryCplus querySerial;
    private QueryIntegrador queryIntegrador;
    List<Movendaproddevolucaocompra> listRma;
    int colunaCodDevolucao;
    FormataCampos formatacaoDeCampos; 
    private int decimaisArredondamento;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupFiltros;
    private javax.swing.ButtonGroup buttonGroupTipoSolucao;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSolucionar;
    private javax.swing.JComboBox jComboBoxTipoPesquisa;
    private javax.swing.JLabel jLabelQuantidadeSolucionada;
    private javax.swing.JLabel jLabelTotalItensLista;
    private javax.swing.JLabel jLabelValorSolucionado;
    private javax.swing.JLabel jLabelValorTotalLista;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelPesquisas;
    private javax.swing.JRadioButton jRadioButtonNaoResolvido;
    private javax.swing.JRadioButton jRadioButtonResolvido;
    private javax.swing.JRadioButton jRadioButtonSolucinarValorParcial;
    private javax.swing.JRadioButton jRadioButtonSolucionarItemParcial;
    private javax.swing.JRadioButton jRadioButtonSolucionarLista;
    private javax.swing.JRadioButton jRadioButtonTodos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPaneControleRma;
    private javax.swing.JTable jTableControleRma;
    private javax.swing.JTextField jTextFieldQuantidadeSolucionada;
    private javax.swing.JTextField jTextFieldTermoPesquisa;
    private javax.swing.JTextField jTextFieldTotalItensLista;
    private javax.swing.JTextField jTextFieldValorSolucionado;
    private javax.swing.JTextField jTextFieldValorTotalLista;
    // End of variables declaration//GEN-END:variables
}
