/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package integrador.rma;

import entidade.cplus.Cliente;
import entidade.cplus.Documento;
import entidade.cplus.Movendaprod;
import entidade.cplus.Tipomovimento;
import entidade.cplus.Unidade;
import entidade.integrador.SaidaSerial;
import integrador.relatorio.ImprimeRelatorio;
import integrador.render.RenderPorcentagem;
import integrador.render.RenderPreco;
import janela.cplus.FormataCampos;
import janela.cplus.ListagemClientesJDialog;
import janela.cplus.ListagemOperacaoJDialog;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import jpa.cplus.CfopJpaController;
import jpa.cplus.MovendaprodJpaController;
import query.cplus.QueryCplus;
import query.integrador.QueryIntegrador;

/**
 *
 * @author leonardo
 */
public class EspelhoRmaJFrame extends javax.swing.JFrame {

    /**
     * Creates new form EspelhoRmaJFrame
     *
     * @param managerCplus1
     * @param managerIntegrador1
     */
    public EspelhoRmaJFrame(EntityManagerFactory managerCplus1, EntityManagerFactory managerIntegrador1) {
        initComponents();
        managerCplus = managerCplus1;
        managerIntegrador = managerIntegrador1;
        this.listagemClientesJDialog = new ListagemClientesJDialog(this, true, managerCplus);
        this.listagemOperacaoJDialog = new ListagemOperacaoJDialog(this, true, managerCplus);
        this.listagemSerialSaidaJDialog = new ListagemSerialSaidaJDialog(this, true, managerIntegrador);
   //     listSerial = new ArrayList<>();
        colunaCodMovendaProd = jTableItensEspelho.getColumnModel().getColumnIndex("Codmovprod");
        mensagem = new ArrayList<>();
        queryIntegrador = new QueryIntegrador(managerIntegrador);
        //var = var1;
        //decimaisArredondamento = Integer.valueOf(queryIntegrador.valorConfiguracao("casas_decimais_ARREDONDAMENTO"));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icones/logo.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroupOperacao = new javax.swing.ButtonGroup();
        cplusPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("cplusPU").createEntityManager();
        movendaprodQuery = java.beans.Beans.isDesignTime() ? null : cplusPUEntityManager.createQuery("SELECT prod FROM Movendaprod prod WHERE prod.codmovprod = \"99999900\"");
        movendaprodList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(movendaprodQuery.getResultList());
        jPanelDadosModelo = new javax.swing.JPanel();
        jTextFieldNomeOperacao = new javax.swing.JTextField();
        jLabelDescricaoOperacao = new javax.swing.JLabel();
        jLabelCfop = new javax.swing.JLabel();
        jTextFieldCfop = new javax.swing.JTextField();
        jLabelRazaoCliente = new javax.swing.JLabel();
        jTextFieldRazaoCliente = new javax.swing.JTextField();
        jLabelCnpj = new javax.swing.JLabel();
        jTextFieldCnpj = new javax.swing.JTextField();
        jLabelNomeFantasia = new javax.swing.JLabel();
        jTextFieldNomeFantasia = new javax.swing.JTextField();
        jLabelIe = new javax.swing.JLabel();
        jTextFieldIe = new javax.swing.JTextField();
        jButtonPesquisaCliente = new javax.swing.JButton();
        jButtonOperacao = new javax.swing.JButton();
        jRadioButtonDevolucao = new javax.swing.JRadioButton();
        jRadioButtonTrocaEmGarantia = new javax.swing.JRadioButton();
        jPanelControle = new javax.swing.JPanel();
        jButtonImprimir = new javax.swing.JButton();
        jButtonInserir = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jButtonRemoverProduto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableItensEspelho = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaObservacos = new javax.swing.JTextArea();
        jButtonEditarMensagem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Espelho RMA");

        jPanelDadosModelo.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Gerais"));

        jLabelDescricaoOperacao.setText("Descrição Operação:");

        jLabelCfop.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCfop.setText("CFOP");

        jLabelRazaoCliente.setText("Razão Social Cliente:");

        jLabelCnpj.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCnpj.setText("CNPJ:");

        jLabelNomeFantasia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelNomeFantasia.setText("Nome Fantasia:");

        jLabelIe.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelIe.setText("I.E.:");

        jButtonPesquisaCliente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        jButtonPesquisaCliente.setText("Cliente");
        jButtonPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisaClienteActionPerformed(evt);
            }
        });

        jButtonOperacao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonOperacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        jButtonOperacao.setText("Operação");
        jButtonOperacao.setEnabled(false);
        jButtonOperacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOperacaoActionPerformed(evt);
            }
        });

        buttonGroupOperacao.add(jRadioButtonDevolucao);
        jRadioButtonDevolucao.setSelected(true);
        jRadioButtonDevolucao.setText("Devolução");
        jRadioButtonDevolucao.setEnabled(false);

        buttonGroupOperacao.add(jRadioButtonTrocaEmGarantia);
        jRadioButtonTrocaEmGarantia.setText("Troca em Garantia");
        jRadioButtonTrocaEmGarantia.setEnabled(false);

        jButtonImprimir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonImprimir.setText("Imprimir");
        jButtonImprimir.setEnabled(false);
        jButtonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirActionPerformed(evt);
            }
        });

        jButtonInserir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/add.png"))); // NOI18N
        jButtonInserir.setText("Inserir Serial");
        jButtonInserir.setEnabled(false);
        jButtonInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirActionPerformed(evt);
            }
        });

        jButtonNovo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/adicionar.png"))); // NOI18N
        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonRemoverProduto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonRemoverProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/delete.png"))); // NOI18N
        jButtonRemoverProduto.setText("Remover Produto");
        jButtonRemoverProduto.setEnabled(false);
        jButtonRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelControleLayout = new javax.swing.GroupLayout(jPanelControle);
        jPanelControle.setLayout(jPanelControleLayout);
        jPanelControleLayout.setHorizontalGroup(
            jPanelControleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControleLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanelControleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRemoverProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(jButtonInserir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelControleLayout.setVerticalGroup(
            jPanelControleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelControleLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jButtonImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonInserir)
                .addGap(3, 3, 3)
                .addComponent(jButtonNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemoverProduto)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanelDadosModeloLayout = new javax.swing.GroupLayout(jPanelDadosModelo);
        jPanelDadosModelo.setLayout(jPanelDadosModeloLayout);
        jPanelDadosModeloLayout.setHorizontalGroup(
            jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                        .addComponent(jLabelNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                        .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelRazaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDescricaoOperacao))
                        .addGap(4, 4, 4)
                        .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldRazaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                            .addComponent(jTextFieldNomeOperacao))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                        .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCnpj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelIe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldIe, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                        .addComponent(jLabelCfop, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                                .addComponent(jTextFieldCfop, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButtonOperacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addComponent(jRadioButtonTrocaEmGarantia)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelControle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDadosModeloLayout.setVerticalGroup(
            jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPesquisaCliente)
                    .addComponent(jButtonOperacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNomeOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDescricaoOperacao)
                    .addComponent(jLabelCfop)
                    .addComponent(jTextFieldCfop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonTrocaEmGarantia)
                    .addComponent(jRadioButtonDevolucao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                        .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRazaoCliente)
                            .addComponent(jTextFieldRazaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCnpj))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDadosModeloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNomeFantasia)
                            .addComponent(jTextFieldNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelIe)))
                    .addGroup(jPanelDadosModeloLayout.createSequentialGroup()
                        .addComponent(jTextFieldCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jPanelControle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTableItensEspelho.setAutoCreateRowSorter(true);
        jTableItensEspelho.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, movendaprodList, jTableItensEspelho);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codprod.codigo}"));
        columnBinding.setColumnName("Cod.");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codprod.nomeprod}"));
        columnBinding.setColumnName("Descrição");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codsituacaotributaria}"));
        columnBinding.setColumnName("CST");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codcfop.codcfop}"));
        columnBinding.setColumnName("CFOP");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codprod.codclassificacaofiscal.codigoclassificacaofiscal}"));
        columnBinding.setColumnName("NCM");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantidade}"));
        columnBinding.setColumnName("Quantidade");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorunitario}"));
        columnBinding.setColumnName("Valor Unit.");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valortotal}"));
        columnBinding.setColumnName("Valor Total");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cstcofins}"));
        columnBinding.setColumnName("CST COFINS");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cstpis}"));
        columnBinding.setColumnName("CST PIS");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorpis}"));
        columnBinding.setColumnName("Valor PIS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${aliqpis}"));
        columnBinding.setColumnName("Aliq. PIS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${basepis}"));
        columnBinding.setColumnName("Base PIS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorcofins}"));
        columnBinding.setColumnName("Valor COFINS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${aliqcofins}"));
        columnBinding.setColumnName("Aliq. COFINS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${basecofins}"));
        columnBinding.setColumnName("Base COFINS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorsubsttributaria}"));
        columnBinding.setColumnName("Valor ST");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${basesubsttributaria}"));
        columnBinding.setColumnName("Base ST");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${aliqicms}"));
        columnBinding.setColumnName("Aliq. ICMS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${baseicms}"));
        columnBinding.setColumnName("Base ICMS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valoricms}"));
        columnBinding.setColumnName("Valor ICMS");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codmovprod}"));
        columnBinding.setColumnName("Codmovprod");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableItensEspelho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableItensEspelhoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableItensEspelho);
        if (jTableItensEspelho.getColumnModel().getColumnCount() > 0) {
            jTableItensEspelho.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTableItensEspelho.getColumnModel().getColumn(1).setPreferredWidth(350);
            jTableItensEspelho.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTableItensEspelho.getColumnModel().getColumn(6).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(7).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(10).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(11).setCellRenderer(new RenderPorcentagem());
            jTableItensEspelho.getColumnModel().getColumn(12).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(13).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(14).setCellRenderer(new RenderPorcentagem());
            jTableItensEspelho.getColumnModel().getColumn(15).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(16).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(17).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(18).setCellRenderer(new RenderPorcentagem());
            jTableItensEspelho.getColumnModel().getColumn(19).setCellRenderer(new RenderPreco());
            jTableItensEspelho.getColumnModel().getColumn(20).setCellRenderer(new RenderPreco());
        }

        jTextAreaObservacos.setColumns(30);
        jTextAreaObservacos.setRows(5);
        jScrollPane1.setViewportView(jTextAreaObservacos);

        jButtonEditarMensagem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonEditarMensagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Edit.png"))); // NOI18N
        jButtonEditarMensagem.setText("Editar Mensagem");
        jButtonEditarMensagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarMensagemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanelDadosModelo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEditarMensagem)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelDadosModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEditarMensagem))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisaClienteActionPerformed
        this.listagemClientesJDialog.setVisible(true);
        if (this.listagemClientesJDialog.isCancelamento() == false) {
            cliente = this.listagemClientesJDialog.getCliente();
            if ("Y".equals(cliente.getFlagfisica().toString())) {
                jTextFieldCnpj.setText(cliente.getCpf());
                jTextFieldIe.setText(cliente.getIdentidade());
                jTextFieldNomeFantasia.setText(cliente.getNomecli());
            } else {
                jTextFieldCnpj.setText(new FormataCampos().mascaraCNPJ(cliente.getCnpj()));
                jTextFieldIe.setText(cliente.getInscr());
                jTextFieldRazaoCliente.setText(cliente.getConjfantasia());
                jTextFieldNomeFantasia.setText(cliente.getNomecli());
            }
            jButtonOperacao.setEnabled(true);
            jRadioButtonDevolucao.setEnabled(true);
            jRadioButtonTrocaEmGarantia.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonPesquisaClienteActionPerformed

    private void jButtonInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirActionPerformed
        insereSerial();
        jButtonImprimir.setEnabled(true);
    }//GEN-LAST:event_jButtonInserirActionPerformed

    private void jButtonOperacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOperacaoActionPerformed
        this.listagemOperacaoJDialog.setInativo(false);
        this.listagemOperacaoJDialog.setCliente(true);
        this.listagemOperacaoJDialog.setTipoMovimento("E");
        this.listagemOperacaoJDialog.setDevolucao(jRadioButtonDevolucao.isSelected());
        this.listagemOperacaoJDialog.pesquisas();
        this.listagemOperacaoJDialog.setVisible(true);
        if (this.listagemOperacaoJDialog.isCancelamento() == false) {
            tipoMovimentoObjeto = this.listagemOperacaoJDialog.getMovimento();
            if ("Y".equals(tipoMovimentoObjeto.getFlagdevolucao().toString())) {
                if ("RS".equals(cliente.getEstado())) {
                    jTextFieldCfop.setText(tipoMovimentoObjeto.getCodcfopdentrouf());
                } else {
                    jTextFieldCfop.setText(tipoMovimentoObjeto.getCodcfopforauf());
                }
                jTextFieldNomeOperacao.setText("Devolução de Mercadorias");
            } else {
                if ("RS".equals(cliente.getEstado())) {
                    jTextFieldCfop.setText(tipoMovimentoObjeto.getCodcfopdentrouf());
                } else {
                    jTextFieldCfop.setText(tipoMovimentoObjeto.getCodcfopforauf());
                }
                jTextFieldNomeOperacao.setText("Remessa Troca em Garantia");
            }
            jButtonInserir.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonOperacaoActionPerformed

    private void jButtonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirActionPerformed
        new ImprimeRelatorio().imprimeRelatorioPeloArquivo(queryIntegrador.valorConfiguracao("caminho_RELATORIO_ESPELHO_RMA"), movendaprodList);
    }//GEN-LAST:event_jButtonImprimirActionPerformed

    private void jButtonRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverProdutoActionPerformed
        colunaCodMovendaProd = jTableItensEspelho.getColumnModel().getColumnIndex("Codmovprod");
        String codMovendaProd = jTableItensEspelho.getValueAt(jTableItensEspelho.getSelectedRow(), colunaCodMovendaProd).toString();
        for (Movendaprod prodFor : movendaprodList) {
            if (prodFor.getCodmovprod() == null ? codMovendaProd == null : prodFor.getCodmovprod().equals(codMovendaProd)) {
                jTableItensEspelho.clearSelection();
                movendaprodList.remove(prodFor);
                jButtonRemoverProduto.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jButtonRemoverProdutoActionPerformed

    private void jTableItensEspelhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableItensEspelhoMouseClicked
        jButtonRemoverProduto.setEnabled(true);
    }//GEN-LAST:event_jTableItensEspelhoMouseClicked

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        limpaCampos();
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonEditarMensagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarMensagemActionPerformed
        for (Movendaprod prodFor : movendaprodList) {
            prodFor.getCodmovenda().setObs(jTextAreaObservacos.getText());
        }
    }//GEN-LAST:event_jButtonEditarMensagemActionPerformed

    private BigDecimal valorUnitarioCompra(Movendaprod prod) {
        BigDecimal val = prod.getValortotal().subtract(prod.getValordescontorateado());
        val = val.add(prod.getValoracrescimorateado());
        val = val.divide(prod.getQuantidade(), 4, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private BigDecimal valorSTEspelho(Movendaprod prod, BigDecimal quantidadeEspelho) {
        BigDecimal val = prod.getValorsubsttributaria().divide(prod.getQuantidade(), 4, BigDecimal.ROUND_HALF_UP);
        val = val.multiply(quantidadeEspelho).setScale(2, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private BigDecimal valorBaseCofinsEspelho(Movendaprod prod, BigDecimal quantidadeEspelho) {
        BigDecimal val = prod.getBasecofins().divide(prod.getQuantidade(), 4, BigDecimal.ROUND_HALF_UP);
        val = val.multiply(quantidadeEspelho).setScale(2, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private BigDecimal valorBasePisEspelho(Movendaprod prod, BigDecimal quantidadeEspelho) {
        BigDecimal val = prod.getBasepis().divide(prod.getQuantidade(), 4, BigDecimal.ROUND_HALF_UP);
        val = val.multiply(quantidadeEspelho).setScale(2, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private BigDecimal valorCofinsEspelho(Movendaprod prod, BigDecimal quantidadeEspelho) {
        BigDecimal val = prod.getValorcofins().divide(prod.getQuantidade(), 4, BigDecimal.ROUND_HALF_UP);
        val = val.multiply(quantidadeEspelho).setScale(2, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private BigDecimal valorPisEspelho(Movendaprod prod, BigDecimal quantidadeEspelho) {
        BigDecimal val = prod.getValorpis().divide(prod.getQuantidade(), 4, BigDecimal.ROUND_HALF_UP);
        val = val.multiply(quantidadeEspelho).setScale(2, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private BigDecimal valorBaseIcmsEspelho(Movendaprod prod, BigDecimal quantidadeEspelho) {
        BigDecimal val = prod.getBaseicms().divide(prod.getQuantidade(), 4, BigDecimal.ROUND_HALF_UP);
        val = val.multiply(quantidadeEspelho).setScale(2, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private BigDecimal valorIcmsEspelho(Movendaprod prod, BigDecimal quantidadeEspelho) {
        BigDecimal val = prod.getValoricms().divide(prod.getQuantidade(), 4, BigDecimal.ROUND_HALF_UP);
        val = val.multiply(quantidadeEspelho).setScale(2, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private BigDecimal valorTotalProdutoEspelho(Movendaprod prod, BigDecimal quantidadeEspelho) {
        BigDecimal val = valorUnitarioCompra(prod).multiply(quantidadeEspelho).setScale(2, BigDecimal.ROUND_HALF_UP);
        return val;
    }

    private void insereSerial() {
        this.listagemSerialSaidaJDialog.setVisible(true);
        if (this.listagemSerialSaidaJDialog.isCancelamento() == false) {
            SaidaSerial serial = this.listagemSerialSaidaJDialog.getSaidaSerial();
           // listSerial.add(serial);
            Movendaprod prod = new MovendaprodJpaController(managerCplus).findMovendaprod(serial.getCodSaidaProd());
            Movendaprod prod1 = new MovendaprodJpaController(managerCplus).findMovendaprod(serial.getCodSaidaProd());;
            boolean condicao = true;
            BigDecimal quantidadeEspelho = quantidadeConversaoSaida(prod);
            for (Movendaprod vendaProd : movendaprodList) {
                // if (prod.getCodprod().getCodprod().equals(vendaProd.getCodprod().getCodprod()) && prod.getValorunitario().doubleValue() == vendaProd.getValorunitario().doubleValue()) {
                if (prod.getCodprod().getCodprod().equals(vendaProd.getCodprod().getCodprod()) && valorUnitarioCompra(prod).doubleValue() == vendaProd.getValorunitario().doubleValue()) {
                    movendaprodList.remove(vendaProd);
                    //valor original + 1
                    quantidadeEspelho = vendaProd.getQuantidade().add(quantidadeEspelho);
                    prod.setQuantidade(quantidadeEspelho);
                    if ("Y".equals(tipoMovimentoObjeto.getFlagdevolucao().toString())) {
                        prod.setValorunitario(valorUnitarioCompra(prod1));
                        prod.setValortotal(valorTotalProdutoEspelho(prod1, quantidadeEspelho));
                        prod.setValorsubsttributaria(valorSTEspelho(prod1, quantidadeEspelho));
                        prod.setAliqcofins(prod1.getAliqcofins());
                        prod.setAliqicms(prod1.getAliqicms());
                        prod.setAliqpis(prod1.getAliqpis());
                        prod.setBasecofins(valorBaseCofinsEspelho(prod1, quantidadeEspelho));
                        prod.setBaseicms(valorBaseIcmsEspelho(prod1, quantidadeEspelho));
                        prod.setBasepis(valorBasePisEspelho(prod1, quantidadeEspelho));
                        prod.setValorcofins(valorCofinsEspelho(prod1, quantidadeEspelho));
                        prod.setValoricms(valorIcmsEspelho(prod1, quantidadeEspelho));
                        prod.setValorpis(valorPisEspelho(prod1, quantidadeEspelho));
                        prod.getCodmovenda().setCodcli(cliente);
                        if ("RS".equals(cliente.getEstado())) {
                            if ("5405".equals(prod.getCodcfop().getCodcfop())) {
                                prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("5411"));
                            } else {
                                prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("5202"));
                            }
                        } else {
                            prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("6202"));
                        }
                    } else {
                        prod.setValorunitario(valorUnitarioCompra(prod1));
                        prod.setValortotal(valorTotalProdutoEspelho(prod1, quantidadeEspelho));
                        prod.setValorsubsttributaria(BigDecimal.ZERO);
                        prod.setAliqcofins(BigDecimal.ZERO);
                        prod.setAliqicms(BigDecimal.ZERO);
                        prod.setAliqpis(BigDecimal.ZERO);
                        prod.setBasecofins(BigDecimal.ZERO);
                        prod.setBaseicms(BigDecimal.ZERO);
                        prod.setBasepis(BigDecimal.ZERO);
                        prod.setValorcofins(BigDecimal.ZERO);
                        prod.setValoricms(BigDecimal.ZERO);
                        prod.setValorpis(BigDecimal.ZERO);
                        prod.getCodmovenda().setCodcli(cliente);
                        if ("RS".equals(cliente.getEstado())) {
                            prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("5949"));
                            prod.setCstcofins("49");
                            prod.setCstpis("49");
                            prod.setCodsituacaotributaria("41");
                        } else {
                            prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("6949"));
                            prod.setCstcofins("49");
                            prod.setCstpis("49");
                        }
                       // prod.getCodmovenda().setObs(mensagemNota(prod));
                    }
                    prod.getCodmovenda().setCodcli(cliente);
                    prod.getCodmovenda().setObs(mensagemNota(prod));
                    movendaprodList.add(prod);
                    condicao = false;
                }
            }
            if (condicao) {
                prod.setQuantidade(quantidadeEspelho);
                if ("Y".equals(tipoMovimentoObjeto.getFlagdevolucao().toString())) {
                    prod.setValorunitario(valorUnitarioCompra(prod1));
                    prod.setValortotal(valorTotalProdutoEspelho(prod1, quantidadeEspelho));
                    prod.setValorsubsttributaria(valorSTEspelho(prod1, quantidadeEspelho));
                    prod.setAliqcofins(prod1.getAliqcofins());
                    prod.setAliqicms(prod1.getAliqicms());
                    prod.setAliqpis(prod1.getAliqpis());
                    prod.setBasecofins(valorBaseCofinsEspelho(prod1, quantidadeEspelho));
                    prod.setBaseicms(valorBaseIcmsEspelho(prod1, quantidadeEspelho));
                    prod.setBasepis(valorBasePisEspelho(prod1, quantidadeEspelho));
                    prod.setValorcofins(valorCofinsEspelho(prod1, quantidadeEspelho));
                    prod.setValoricms(valorIcmsEspelho(prod1, quantidadeEspelho));
                    prod.setValorpis(valorPisEspelho(prod1, quantidadeEspelho));
                    prod.getCodmovenda().setCodcli(cliente);
                    if ("RS".equals(cliente.getEstado())) {
                        if ("5405".equals(prod1.getCodcfop().getCodcfop())) {
                            prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("5411"));
                        } else {
                            prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("5202"));
                        }
                    } else {
                        prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("6202"));
                    }
                    //prod.getCodmovenda().setObs(mensagemNota(prod));
                } else {
                    prod.setValorunitario(valorUnitarioCompra(prod1));
                    prod.setValortotal(valorTotalProdutoEspelho(prod1, quantidadeEspelho));
                    prod.setValorsubsttributaria(BigDecimal.ZERO);
                    prod.setAliqcofins(BigDecimal.ZERO);
                    prod.setAliqicms(BigDecimal.ZERO);
                    prod.setAliqpis(BigDecimal.ZERO);
                    prod.setBasecofins(BigDecimal.ZERO);
                    prod.setBaseicms(BigDecimal.ZERO);
                    prod.setBasepis(BigDecimal.ZERO);
                    prod.setValorcofins(BigDecimal.ZERO);
                    prod.setValoricms(BigDecimal.ZERO);
                    prod.setValorpis(BigDecimal.ZERO);
                    prod.getCodmovenda().setCodcli(cliente);
                    if ("RS".equals(cliente.getEstado())) {
                        prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("5949"));
                        prod.setCstcofins("49");
                        prod.setCstpis("49");
                        prod.setCodsituacaotributaria("41");
                    } else {
                        prod.setCodcfop(new CfopJpaController(managerCplus).findCfop("6949"));
                        prod.setCstcofins("49");
                        prod.setCstpis("49");
                    }
                    //prod.getCodmovenda().setObs(mensagemNota(prod));
                }
                prod.getCodmovenda().setObs(mensagemNota(prod));
                movendaprodList.add(prod);
            }
        }
    }

    private String mensagemNota(Movendaprod movSaidaProd) {
        List<Documento> listDoc = new QueryCplus(managerCplus).resultDocumento(movSaidaProd.getCodmovenda().getNumped().toString());
        String txt = "";
        if ("Y".equals(tipoMovimentoObjeto.getFlagdevolucao().toString())) {
            for (Documento doc : listDoc) {
                txt = "Ref. Nota: " + doc.getNumnota() + ", Data: " + new FormataCampos().dataStringSoData(movSaidaProd.getCodmovenda().getData(), 0) + " "
                        + "Chave: " + doc.getChaveacessonfeletronica();
            }
        } else {
            if (listDoc.size() > 0) {
                for (Documento doc : listDoc) {
                    txt = "Ref. Nota: " + doc.getNumnota() + ", Data: " + new FormataCampos().dataStringSoData(movSaidaProd.getCodmovenda().getData(), 0) + " "
                            + "Chave: " + doc.getChaveacessonfeletronica();
                }
            } else {
                txt = "Ref. Pedido: " + movSaidaProd.getCodmovenda().getNumped() + ", Data: " + new FormataCampos().dataStringSoData(movSaidaProd.getCodmovenda().getData(), 0);
            }
        }
        boolean cond = true;
        for (String s : mensagem) {
            if (txt.equals(s)) {
                cond = false;
            }
        }
        if (cond) {
            mensagem.add(txt);
        }
        String txt1 = "";
        for (String s1 : mensagem) {
            txt1 = txt1 + s1 + "\n";
        }
        jTextAreaObservacos.setText(txt1);
        return txt1;
    }

    private BigDecimal quantidadeConversaoSaida(Movendaprod movSaidaProd) {
        BigDecimal quantidade = BigDecimal.ONE;
        for (Unidade un : new QueryCplus(managerCplus).resultPorUnidadeProduto(movSaidaProd.getCodprod().getUnidade())) {
            if (un.getFatorconversao().intValue() > 1) {
                quantidade = un.getFatorconversao();
            }
        }
        return quantidade;
    }

    private void limpaCampos() {
        jTextFieldCnpj.setText("");
        jTextFieldIe.setText("");
        jTextFieldRazaoCliente.setText("");
        jTextFieldNomeFantasia.setText("");
        jTextFieldCfop.setText("");
        jTextFieldNomeOperacao.setText("");
        movendaprodList.clear();
        mensagem.clear();
        jTextAreaObservacos.setText("");

        jButtonOperacao.setEnabled(false);
        jRadioButtonDevolucao.setEnabled(false);
        jRadioButtonTrocaEmGarantia.setEnabled(false);
        jButtonImprimir.setEnabled(false);
        jButtonRemoverProduto.setEnabled(false);
        jButtonInserir.setEnabled(false);
        // listSerial.clear();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EspelhoRmaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EspelhoRmaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EspelhoRmaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EspelhoRmaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EspelhoRmaJFrame(managerCplus, managerIntegrador).setVisible(true);
            }
        });
    }

    private Cliente cliente;
    private Tipomovimento tipoMovimentoObjeto;
    private int colunaCodMovendaProd;
    private final ListagemClientesJDialog listagemClientesJDialog;
    private final ListagemOperacaoJDialog listagemOperacaoJDialog;
    private final ListagemSerialSaidaJDialog listagemSerialSaidaJDialog;
    private static EntityManagerFactory managerCplus;
    private static EntityManagerFactory managerIntegrador;
    private List<String> mensagem;
    private final QueryIntegrador queryIntegrador;
   // private List<SaidaSerial> listSerial;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupOperacao;
    private javax.persistence.EntityManager cplusPUEntityManager;
    private javax.swing.JButton jButtonEditarMensagem;
    private javax.swing.JButton jButtonImprimir;
    private javax.swing.JButton jButtonInserir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonOperacao;
    private javax.swing.JButton jButtonPesquisaCliente;
    private javax.swing.JButton jButtonRemoverProduto;
    private javax.swing.JLabel jLabelCfop;
    private javax.swing.JLabel jLabelCnpj;
    private javax.swing.JLabel jLabelDescricaoOperacao;
    private javax.swing.JLabel jLabelIe;
    private javax.swing.JLabel jLabelNomeFantasia;
    private javax.swing.JLabel jLabelRazaoCliente;
    private javax.swing.JPanel jPanelControle;
    private javax.swing.JPanel jPanelDadosModelo;
    private javax.swing.JRadioButton jRadioButtonDevolucao;
    private javax.swing.JRadioButton jRadioButtonTrocaEmGarantia;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableItensEspelho;
    private javax.swing.JTextArea jTextAreaObservacos;
    private javax.swing.JTextField jTextFieldCfop;
    private javax.swing.JTextField jTextFieldCnpj;
    private javax.swing.JTextField jTextFieldIe;
    private javax.swing.JTextField jTextFieldNomeFantasia;
    private javax.swing.JTextField jTextFieldNomeOperacao;
    private javax.swing.JTextField jTextFieldRazaoCliente;
    private java.util.List<entidade.cplus.Movendaprod> movendaprodList;
    private javax.persistence.Query movendaprodQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
