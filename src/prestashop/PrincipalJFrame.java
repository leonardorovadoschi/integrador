/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prestashop;

import entidade.cplus.Usuario;
import acesso.ControleAcesso;
import acesso.ListagemUsuarioJDialog;
import entidade.cplus.Cliente;
import entidade.integrador.IntConfiguracao;
import integrador.rma.ControleRmaJFrame;
import integrador.rma.EspelhoRmaJFrame;
import integrador.rma.RmaJFrame;
import integrador.separacao.EntradaSerialJFrame;
import integrador.separacao.SaidaSerialJFrame;
import janela.cplus.AlteracaoPrecoProdutoJFrame;
import janela.cplus.EntradasCplusJFrame;
import janela.cplus.RelatorioComprasJFrame;
import janela.cplus.RelatorioEstoqueJFrame;
import janela.cplus.SaidaJFrame;
import janela.integrador.IntegracaoJFrame;
import janela.integrador.ListaFornecedorJFrame;
import janela.prestaShop.VendaDigimacroJFrame;
import java.awt.Toolkit;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import jpa.cplus.ClienteJpaController;
import jpa.cplus.exceptions.NonexistentEntityException;
import jpa.integrador.IntConfiguracaoJpaController;
import query.cplus.QueryCplus;
import query.integrador.QueryIntegrador;

/**
 *
 * @author leonardo
 */
public class PrincipalJFrame extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalJFrame
     */
    public PrincipalJFrame() {
        initComponents();
        // var = new VariavelStatica();
        managerCplus = Persistence.createEntityManagerFactory("cplusPU");
        managerIntegrador = Persistence.createEntityManagerFactory("integradorPU");
        managerPrestaShop = Persistence.createEntityManagerFactory("PrestaShopPU");
        queryIntegrador = new QueryIntegrador(managerIntegrador);
        this.listagemUsuarioJDialog = new ListagemUsuarioJDialog(this, true, managerCplus);
        this.listagemUsuarioJDialog.setLocationRelativeTo(null);
        this.listagemUsuarioJDialog.requestFocusInWindow();
        this.listagemUsuarioJDialog.setVisible(true);
        acesso = new ControleAcesso(managerCplus);
        if (this.listagemUsuarioJDialog.isCancelamento() == true) {
            cancelamento();
        } else {
            usuario = this.listagemUsuarioJDialog.getUsuario();
        }
        setCondicao(true);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icones/logo.png")));

        if (acesso.verificaAcessoUsuario(usuario, "Orçamento")) {
            jMenuItemVendasDigimacro.setEnabled(true);
        } else {
            jMenuItemVendasDigimacro.setEnabled(false);
        }
        if (acesso.verificaAcessoUsuario(usuario, "Ordem de serviço")) {
            jMenuManutencaoRma.setEnabled(true);
        } else {
            jMenuManutencaoRma.setEnabled(false);
        }
        jLabelHostLocal.setText(retornaIpLocal());
        jLabelUsuario.setText("Nome Usuario: " + usuario.getNome());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonFechar = new javax.swing.JButton();
        jLabelHostLocal = new javax.swing.JLabel();
        jLabelUsuario = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuImpostos = new javax.swing.JMenu();
        jMenuIntegracao = new javax.swing.JMenuItem();
        jMenuItemCompras = new javax.swing.JMenuItem();
        jMenuItemEstoque = new javax.swing.JMenuItem();
        jMenuVendas = new javax.swing.JMenu();
        jMenuItemListagemVenda = new javax.swing.JMenuItem();
        jMenuSerial = new javax.swing.JMenu();
        jMenuItemEntradaSerial = new javax.swing.JMenuItem();
        jMenuItemSeparacao = new javax.swing.JMenuItem();
        jMenuManutencaoRma = new javax.swing.JMenu();
        jMenuItemRma = new javax.swing.JMenuItem();
        jMenuItemEspelhoRma = new javax.swing.JMenuItem();
        jMenuVendaMagento = new javax.swing.JMenu();
        jMenuItemVendasDigimacro = new javax.swing.JMenuItem();
        jMenuProdutos = new javax.swing.JMenu();
        jMenuManutencaoProdutosCplus = new javax.swing.JMenu();
        jMenuItemAlteracaoDePreco = new javax.swing.JMenuItem();
        jMenuItemListaFornecedores = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Integrador");

        jButtonFechar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/stop.png"))); // NOI18N
        jButtonFechar.setText("Fechar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jMenuImpostos.setText("Integrador");

        jMenuIntegracao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuIntegracao.setText("Integrador");
        jMenuIntegracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuIntegracaoActionPerformed(evt);
            }
        });
        jMenuImpostos.add(jMenuIntegracao);

        jMenuItemCompras.setText("Compras");
        jMenuItemCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemComprasActionPerformed(evt);
            }
        });
        jMenuImpostos.add(jMenuItemCompras);

        jMenuItemEstoque.setText("Estoque");
        jMenuItemEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEstoqueActionPerformed(evt);
            }
        });
        jMenuImpostos.add(jMenuItemEstoque);

        jMenuBar.add(jMenuImpostos);

        jMenuVendas.setText("Vendas");

        jMenuItemListagemVenda.setText("Vendas C-Plus");
        jMenuItemListagemVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemListagemVendaActionPerformed(evt);
            }
        });
        jMenuVendas.add(jMenuItemListagemVenda);

        jMenuSerial.setText("Serial");

        jMenuItemEntradaSerial.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemEntradaSerial.setText("Entrada Serial");
        jMenuItemEntradaSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEntradaSerialActionPerformed(evt);
            }
        });
        jMenuSerial.add(jMenuItemEntradaSerial);

        jMenuItemSeparacao.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSeparacao.setText("Separação Pedido");
        jMenuItemSeparacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSeparacaoActionPerformed(evt);
            }
        });
        jMenuSerial.add(jMenuItemSeparacao);

        jMenuVendas.add(jMenuSerial);

        jMenuManutencaoRma.setText("Manutenção RMA");

        jMenuItemRma.setText("RMA");
        jMenuItemRma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRmaActionPerformed(evt);
            }
        });
        jMenuManutencaoRma.add(jMenuItemRma);

        jMenuItemEspelhoRma.setText("Espelho RMA");
        jMenuItemEspelhoRma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEspelhoRmaActionPerformed(evt);
            }
        });
        jMenuManutencaoRma.add(jMenuItemEspelhoRma);

        jMenuVendas.add(jMenuManutencaoRma);

        jMenuVendaMagento.setText("Vendas Site");

        jMenuItemVendasDigimacro.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemVendasDigimacro.setText("Vendas");
        jMenuItemVendasDigimacro.setEnabled(false);
        jMenuItemVendasDigimacro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVendasDigimacroActionPerformed(evt);
            }
        });
        jMenuVendaMagento.add(jMenuItemVendasDigimacro);

        jMenuVendas.add(jMenuVendaMagento);

        jMenuBar.add(jMenuVendas);

        jMenuProdutos.setText("Produtos");

        jMenuManutencaoProdutosCplus.setText("Manutenção Produtos C-Plus");

        jMenuItemAlteracaoDePreco.setText("Alteração de Preços");
        jMenuItemAlteracaoDePreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAlteracaoDePrecoActionPerformed(evt);
            }
        });
        jMenuManutencaoProdutosCplus.add(jMenuItemAlteracaoDePreco);

        jMenuItemListaFornecedores.setText("Lista Fornecedores");
        jMenuItemListaFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemListaFornecedoresActionPerformed(evt);
            }
        });
        jMenuManutencaoProdutosCplus.add(jMenuItemListaFornecedores);

        jMenuProdutos.add(jMenuManutencaoProdutosCplus);

        jMenuBar.add(jMenuProdutos);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonFechar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHostLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButtonFechar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 396, Short.MAX_VALUE)
                .addComponent(jLabelUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelHostLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuIntegracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuIntegracaoActionPerformed
        boolean aberto = true;
        List<IntConfiguracao> listConfig = queryIntegrador.listagemConfiguracaoPorValor("integracao_1");
        // new IntConfiguracaoJpaController(managerIntegrador).listagemConfiguracaoPorValor("integracao_1");        
        for (IntConfiguracao config : listConfig) {
            if (!config.getTipo().equals(retornaIpLocalIntegracao())) {
                JOptionPane.showMessageDialog(null, "A INTEGRAÇÃO ESTA SENDO EXECUTADA EM " + config.getTipo() + " , Verifique!! \n", "Erro Integrador", JOptionPane.ERROR_MESSAGE);
                aberto = false;
            }
        }
        if (aberto) {
            if (frameIntegracao == null || !frameIntegracao.isDisplayable()) {
                frameIntegracao = new IntegracaoJFrame(managerIntegrador, managerCplus, managerPrestaShop);
                frameIntegracao.setLocationRelativeTo(this); //opcional  
            } else {
                frameIntegracao.setExtendedState(JFrame.NORMAL);
                frameIntegracao.toFront();
            }
            frameIntegracao.setVisible(true);
        }
    }//GEN-LAST:event_jMenuIntegracaoActionPerformed

    private void jMenuItemListagemVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemListagemVendaActionPerformed
        if (vendasJframe == null || !vendasJframe.isDisplayable()) {
            vendasJframe = new SaidaJFrame(managerIntegrador, managerCplus);
            vendasJframe.setLocationRelativeTo(this); //opcional  
        } else {
            vendasJframe.setExtendedState(JFrame.NORMAL);
            vendasJframe.toFront();
        }
        vendasJframe.setVisible(true);
    }//GEN-LAST:event_jMenuItemListagemVendaActionPerformed

    private void jMenuItemAlteracaoDePrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAlteracaoDePrecoActionPerformed
        if (alteracaoPrecoProduto == null || !alteracaoPrecoProduto.isDisplayable()) {
            alteracaoPrecoProduto = new AlteracaoPrecoProdutoJFrame(managerCplus, managerIntegrador, managerPrestaShop);
            alteracaoPrecoProduto.setLocationRelativeTo(this); //opcional  
        } else {
            alteracaoPrecoProduto.setExtendedState(JFrame.NORMAL);
            alteracaoPrecoProduto.toFront();
        }
        alteracaoPrecoProduto.setVisible(true);
    }//GEN-LAST:event_jMenuItemAlteracaoDePrecoActionPerformed

    private void jMenuItemEntradaSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEntradaSerialActionPerformed
        if (entradaSerialJframe == null || !entradaSerialJframe.isDisplayable()) {
            entradaSerialJframe = new EntradaSerialJFrame(managerCplus, managerIntegrador);
            entradaSerialJframe.setLocationRelativeTo(this); //opcional  
        } else {
            entradaSerialJframe.setExtendedState(JFrame.NORMAL);
            entradaSerialJframe.toFront();
        }
        entradaSerialJframe.setVisible(true);
    }//GEN-LAST:event_jMenuItemEntradaSerialActionPerformed

    private void jMenuItemRmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRmaActionPerformed
        if (rmaJFrame == null || !rmaJFrame.isDisplayable()) {
            rmaJFrame = new RmaJFrame(managerPrestaShop, managerCplus, managerIntegrador, usuario);
            rmaJFrame.setLocationRelativeTo(this); //opcional  
        } else {
            rmaJFrame.setExtendedState(JFrame.NORMAL);
            rmaJFrame.toFront();
        }
        rmaJFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItemRmaActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        cancelamento();
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jMenuItemSeparacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSeparacaoActionPerformed
        if (saidaSerialJFrame == null || !saidaSerialJFrame.isDisplayable()) {
            saidaSerialJFrame = new SaidaSerialJFrame(managerCplus, managerIntegrador, managerPrestaShop);
            saidaSerialJFrame.setLocationRelativeTo(this); //opcional  
        } else {
            saidaSerialJFrame.setExtendedState(JFrame.NORMAL);
            saidaSerialJFrame.toFront();
        }
        saidaSerialJFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItemSeparacaoActionPerformed

    private void jMenuItemVendasDigimacroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVendasDigimacroActionPerformed
        if (vendaMagentoJFrame == null || !vendaMagentoJFrame.isDisplayable()) {
            vendaMagentoJFrame = new VendaDigimacroJFrame(managerIntegrador, managerPrestaShop, managerCplus, usuario);
            vendaMagentoJFrame.setLocationRelativeTo(this); //opcional  
        } else {
            vendaMagentoJFrame.setExtendedState(JFrame.NORMAL);
            vendaMagentoJFrame.toFront();
        }
        vendaMagentoJFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItemVendasDigimacroActionPerformed

    private void jMenuItemEspelhoRmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEspelhoRmaActionPerformed
        if (espelhoRmaJFrame == null || !espelhoRmaJFrame.isDisplayable()) {
            espelhoRmaJFrame = new EspelhoRmaJFrame(managerCplus, managerIntegrador);
            espelhoRmaJFrame.setLocationRelativeTo(this); //opcional  
        } else {
            espelhoRmaJFrame.setExtendedState(JFrame.NORMAL);
            espelhoRmaJFrame.toFront();
        }
        espelhoRmaJFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItemEspelhoRmaActionPerformed

    private void jMenuItemListaFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemListaFornecedoresActionPerformed
         if (listaFornecedorJFrame == null || !listaFornecedorJFrame.isDisplayable()) {
            listaFornecedorJFrame = new ListaFornecedorJFrame(managerPrestaShop, managerIntegrador, managerCplus);
            listaFornecedorJFrame.setLocationRelativeTo(this); //opcional  
        } else {
            listaFornecedorJFrame.setExtendedState(JFrame.NORMAL);
            listaFornecedorJFrame.toFront();
        }
        listaFornecedorJFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItemListaFornecedoresActionPerformed

    private void jMenuItemComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemComprasActionPerformed
          if (relatorioComprasJFrame == null || !relatorioComprasJFrame.isDisplayable()) {
            relatorioComprasJFrame = new RelatorioComprasJFrame(managerIntegrador, managerCplus);
            relatorioComprasJFrame.setLocationRelativeTo(this); //opcional  
        } else {
            relatorioComprasJFrame.setExtendedState(JFrame.NORMAL);
            relatorioComprasJFrame.toFront();
        }
        relatorioComprasJFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItemComprasActionPerformed

    private void jMenuItemEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEstoqueActionPerformed
       if (relatorioEstoqueJFrame == null || !relatorioEstoqueJFrame.isDisplayable()) {
            relatorioEstoqueJFrame = new RelatorioEstoqueJFrame(managerCplus);
            relatorioEstoqueJFrame.setLocationRelativeTo(this); //opcional  
        } else {
            relatorioEstoqueJFrame.setExtendedState(JFrame.NORMAL);
            relatorioEstoqueJFrame.toFront();
        }
        relatorioEstoqueJFrame.setVisible(true);                                       
    }//GEN-LAST:event_jMenuItemEstoqueActionPerformed

    private void atualizaCliente(){
        for(Cliente cli : new QueryCplus(managerCplus).cliente('1')){
         cli.setFlagusaaliqicmsdiferenciada('N');
         try {
             new ClienteJpaController(managerCplus).edit(cli);
         } catch (NonexistentEntityException ex) {
             Logger.getLogger(PrincipalJFrame.class.getName()).log(Level.SEVERE, null, ex);
         } catch (Exception ex) {
             Logger.getLogger(PrincipalJFrame.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
      for(Cliente cli : new QueryCplus(managerCplus).cliente('2')){
         cli.setFlagusaaliqicmsdiferenciada('Y');
         try {
             new ClienteJpaController(managerCplus).edit(cli);
         } catch (NonexistentEntityException ex) {
             Logger.getLogger(PrincipalJFrame.class.getName()).log(Level.SEVERE, null, ex);
         } catch (Exception ex) {
             Logger.getLogger(PrincipalJFrame.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
       for(Cliente cli : new QueryCplus(managerCplus).cliente('9')){
         cli.setFlagusaaliqicmsdiferenciada('Y');
         try {
             new ClienteJpaController(managerCplus).edit(cli);
         } catch (NonexistentEntityException ex) {
             Logger.getLogger(PrincipalJFrame.class.getName()).log(Level.SEVERE, null, ex);
         } catch (Exception ex) {
             Logger.getLogger(PrincipalJFrame.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
    }
    
    private void cancelamento() {
        int fechar = JOptionPane.showConfirmDialog(null, " Deseja realmente sair do sistema?", "Fechar Sistema", JOptionPane.YES_NO_CANCEL_OPTION);
        if (fechar == JOptionPane.YES_OPTION) {
            List<IntConfiguracao> listConfig = queryIntegrador.listagemConfiguracaoproTipoConfiguracao(retornaIpLocalSeparacao());
            //new IntConfiguracaoJpaController(managerIntegrador).listagemConfiguracaoproTipoConfiguracao(retornaIpLocalSeparacao());
            for (IntConfiguracao config : listConfig) {
                try {
                    new IntConfiguracaoJpaController(managerIntegrador).destroy(config.getEntityId());
                } catch (jpa.integrador.exceptions.NonexistentEntityException ex) {
                    condicao = false;
                    JOptionPane.showMessageDialog(null, "HOUVE UM ERRO AO EXCLUIR CONFIGURACAO, Verifique!! \n" + ex, "ERRO EXCLUIR", JOptionPane.ERROR_MESSAGE);
                }
            }
            listConfig = queryIntegrador.listagemConfiguracaoproTipoConfiguracao(retornaIpLocalIntegracao());
            //new IntConfiguracaoJpaController(managerIntegrador).listagemConfiguracaoproTipoConfiguracao(retornaIpLocalIntegracao());
            for (IntConfiguracao config : listConfig) {
                try {
                    new IntConfiguracaoJpaController(managerIntegrador).destroy(config.getEntityId());
                } catch (jpa.integrador.exceptions.NonexistentEntityException ex) {
                    condicao = false;
                    JOptionPane.showMessageDialog(null, "HOUVE UM ERRO AO EXCLUIR CONFIGURACAO, Verifique!! \n" + ex, "Erro Integrador", JOptionPane.ERROR_MESSAGE);
                }
            }
            managerCplus.close();
            managerIntegrador.close();
            managerPrestaShop.close();
            // managerMagentoLegiao.close();

            System.exit(0);
        }
    }

    private String retornaIpLocal() {
        InetAddress ia = null;
        try {
            ia = InetAddress.getLocalHost();
        } catch (UnknownHostException e) {
            JOptionPane.showMessageDialog(null, "HOUVE UM ERRO AO OBTER IP LOCAL, Verifique!! \n" + e, "Erro Separação", JOptionPane.ERROR_MESSAGE);
        }
        return "Nome Host: " + ia.getHostName() + " IP Local: " + ia.getHostAddress();
    }

    private String retornaIpLocalIntegracao() {
        InetAddress ia = null;
        try {
            ia = InetAddress.getLocalHost();
        } catch (UnknownHostException e) {
            JOptionPane.showMessageDialog(null, "HOUVE UM ERRO AO OBTER IP LOCAL, Verifique!! \n" + e, "Erro Separação", JOptionPane.ERROR_MESSAGE);
        }
        return "integracao_" + ia.getHostAddress() + "_" + ia.getHostName();
    }

    private String retornaIpLocalSeparacao() {
        InetAddress ia = null;
        try {
            ia = InetAddress.getLocalHost();
        } catch (UnknownHostException e) {
            JOptionPane.showMessageDialog(null, "HOUVE UM ERRO AO OBTER IP LOCAL, Verifique!! \n" + e, "Erro Separação", JOptionPane.ERROR_MESSAGE);
        }
        return "separacao_" + ia.getHostAddress() + "_" + ia.getHostName();
    }

    private RmaJFrame rmaJFrame;
    private SaidaJFrame vendasJframe;
    private RelatorioComprasJFrame relatorioComprasJFrame;
    private EntradasCplusJFrame frameEntradaCplus;
    private IntegracaoJFrame frameIntegracao;
    private EspelhoRmaJFrame espelhoRmaJFrame;
    private AlteracaoPrecoProdutoJFrame alteracaoPrecoProduto;
    private EntradaSerialJFrame entradaSerialJframe;
    private ListaFornecedorJFrame listaFornecedorJFrame;

    //SeparacaoJFrame separacaoJFrame;
    private ControleRmaJFrame controleRmaJFrame;
    private VendaDigimacroJFrame vendaMagentoJFrame;

    private SaidaSerialJFrame saidaSerialJFrame;
    private final EntityManagerFactory managerIntegrador;
    private final EntityManagerFactory managerPrestaShop;
    private final EntityManagerFactory managerCplus;
    //EntityManagerFactory managerMagentoLegiao;
    //VariavelStatica var; 
    private Usuario usuario;
    private final ListagemUsuarioJDialog listagemUsuarioJDialog;
    private final ControleAcesso acesso;
    private final QueryIntegrador queryIntegrador;
    private RelatorioEstoqueJFrame relatorioEstoqueJFrame;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalJFrame().setVisible(true);
            }
        });
    }
    boolean condicao;

    public boolean isCondicao() {
        return condicao;
    }

    public void setCondicao(boolean condicao) {
        this.condicao = condicao;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JLabel jLabelHostLocal;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuImpostos;
    private javax.swing.JMenuItem jMenuIntegracao;
    private javax.swing.JMenuItem jMenuItemAlteracaoDePreco;
    private javax.swing.JMenuItem jMenuItemCompras;
    private javax.swing.JMenuItem jMenuItemEntradaSerial;
    private javax.swing.JMenuItem jMenuItemEspelhoRma;
    private javax.swing.JMenuItem jMenuItemEstoque;
    private javax.swing.JMenuItem jMenuItemListaFornecedores;
    private javax.swing.JMenuItem jMenuItemListagemVenda;
    private javax.swing.JMenuItem jMenuItemRma;
    private javax.swing.JMenuItem jMenuItemSeparacao;
    private javax.swing.JMenuItem jMenuItemVendasDigimacro;
    private javax.swing.JMenu jMenuManutencaoProdutosCplus;
    private javax.swing.JMenu jMenuManutencaoRma;
    private javax.swing.JMenu jMenuProdutos;
    private javax.swing.JMenu jMenuSerial;
    private javax.swing.JMenu jMenuVendaMagento;
    private javax.swing.JMenu jMenuVendas;
    // End of variables declaration//GEN-END:variables
}
